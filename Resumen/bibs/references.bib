@book{runeson2012case,
  title={Case study research in software engineering: Guidelines and examples},
  author={Runeson, Per and Host, Martin and Rainer, Austen and Regnell, Bjorn},
  year={2012},
  publisher={John Wiley \& Sons}
}

@book{leffingwell2010agile,
  title={Agile software requirements: lean requirements practices for teams, programs, and the enterprise},
  author={Leffingwell, Dean},
  year={2010},
  publisher={Addison-Wesley Professional}
}

@book{crispin2009agile,
  title={Agile testing: A practical guide for testers and agile teams},
  author={Crispin, Lisa and Gregory, Janet},
  year={2009},
  publisher={Pearson Education}
}

@book{darwin2013angularjs,
  title={AngularJS web application development},
  author={Darwin, Peter Bacon and Kozlowski, Pawel},
  year={2013},
  publisher={Packt Publ.}
}

@book{ruebbelke2015angularjs,
  title={AngularJS in action},
  author={Ruebbelke, Lukas and Ford, Brian},
  year={2015},
  publisher={Manning,}
}

@book{loeliger2012version,
  title={Version Control with Git: Powerful tools and techniques for collaborative software development},
  author={Loeliger, Jon and McCullough, Matthew},
  year={2012},
  publisher={" O'Reilly Media, Inc."}
}

@article{ronstrom2004mysql,
  title={MySQL cluster architecture overview},
  author={Ronstrom, Mikael and Thalmann, Lars},
  journal={MySQL Technical White Paper},
  year={2004}
}

@book{hunt2011java,
  title={Java performance},
  author={Hunt, Charlie and John, Binu},
  year={2011},
  publisher={Prentice Hall Press}
}

@book{arnold2005java,
  title={The Java programming language},
  author={Arnold, Ken and Gosling, James and Holmes, David},
  year={2005},
  publisher={Addison Wesley Professional}
}

@book{sierra2005head,
  title={Head first java},
  author={Sierra, Kathy and Bates, Bert},
  year={2005},
  publisher={" O'Reilly Media, Inc."}
}

@misc{curricunet_webpage,
	author = {Governet},
	title = {CurricUNET},
	year = {2013}, 
	howpublished = "\url{http://curricunet.com}"
}

@misc{courseleaf_webpage,
	author = {Leepfrog Technologies},
	title = {Courseleaf},
	year = {2017}, 
	howpublished = "\url{https://www.leepfrog.com/courseleaf/}"
}

@misc{deca_webpage,
	author = {CSDC Systems},
	title = {DECA: Curriculum Navigator},
	year = {2017}, 
	howpublished = "\url{http://www.decisionacademic.com/products/curriculum-navigator/}"
}

@inproceedings{jadeja2012cloud,
  title={Cloud computing-concepts, architecture and challenges},
  author={Jadeja, Yashpalsinh and Modi, Kirit},
  booktitle={Computing, Electronics and Electrical Technologies (ICCEET), 2012 International Conference on},
  pages={877--880},
  year={2012},
  organization={IEEE}
}

@inproceedings{kang2011design,
  title={A design of the conceptual architecture for a multitenant saas application platform},
  author={Kang, Sungjoo and Kang, Sungwon and Hur, Sungjin},
  booktitle={Computers, Networks, Systems and Industrial Engineering (CNSI), 2011 First ACIS/JNU International Conference on},
  pages={462--467},
  year={2011},
  organization={IEEE}
}

@inproceedings{li2012cooperative,
  title={A cooperative construction approach for SaaS applications},
  author={Li, Qian and Liu, Shijun and Pan, Ying},
  booktitle={Computer Supported Cooperative Work in Design (CSCWD), 2012 IEEE 16th International Conference on},
  pages={398--403},
  year={2012},
  organization={IEEE}
}

@inproceedings{lee2012web,
  title={Web-based development framework for customizing Java-based business logic of SaaS application},
  author={Lee, Jihyun and Kang, Sungju and Hur, Sung Jin},
  booktitle={Advanced Communication Technology (ICACT), 2012 14th International Conference on},
  pages={1310--1313},
  year={2012},
  organization={IEEE}
}

@article{chou2008software,
  title={Software as a Service (SaaS) as an outsourcing model: An economic analysis},
  author={Chou, David C and Chou, Amy Y},
  journal={Proc. SWDSI’08},
  pages={386--391},
  year={2008}
}

@inproceedings{ma2007business,
  title={The business model of" software-as-a-service"},
  author={Ma, Dan},
  booktitle={Services Computing, 2007. SCC 2007. IEEE International Conference on},
  pages={701--702},
  year={2007},
  organization={IEEE}
}

@inproceedings{rothlisberger_tackling_2009,
	address = {Brest, France},
	title = {Tackling software navigation issues of the {Smalltalk} {IDE}},
	isbn = {978-1-60558-899-5},
	url = {http://dx.doi.org/10.1145/1735935.1735945},
	doi = {10.1145/1735935.1735945},
	abstract = {The IDE used in most Smalltalk dialects, including Pharo, Squeak and Cincom Smalltalk, did not evolve significantly over the last years, if not to say decades. For other languages, for instance Java, the available IDEs made tremendous progress as Eclipse and Net-Beans illustrate. While the Smalltalk IDE served as an exemplar for many years, other IDEs caught up or even overtook the erstwhile leader in terms of feature-richness, usability and code navigation facilities. In this paper we first analyze the difficulty of software navigation in the Smalltalk IDE and second illustrate with concrete examples the features we added to the Smalltalk IDE to fill the gap to modern IDEs and to provide novel, improved means to navigate source space. We show that thanks to the agility and dynamics of Smalltalk, we are able to extend and enhance with reasonable effort the Smalltalk IDE to better support software navigation, program comprehension, and software maintenance in general. One such support is the integration of dynamic information into the static source views we are familiar with. Other means include easing the access to static information (for instance by better arranging important packages) or helping developers locating artifacts of interest.},
	booktitle = {{IWST} '09: {Proceedings} of the {International} {Workshop} on {Smalltalk} {Technologies}},
	publisher = {ACM},
	author = {Röthlisberger, David and Nierstrasz, Oscar and Bergel, Alexandre and Ducasse, Stéphane},
	year = {2009},
	keywords = {in\_res\_library, navigation, propuesta, sw\_natura, tesis},
	pages = {58--67}
}

@book{wittig2015amazon,
  title={Amazon Web Services in Action},
  author={Wittig, Andreas and Wittig, Michael},
  year={2015},
  publisher={Manning Publications Co.}
}


@article{cartwright2009student,
	title={Student learning outcomes assessment handbook},
	author={Cartwright, Rebecca and Weiner, Ken and Streamer-Veneruso, Samantha},
	journal={Montgomery County, MD: Montgomery College},
	year={2009}
}

@article{harden2001amee,
	title={AMEE Guide No. 21: Curriculum mapping: a tool for transparent and authentic teaching and learning},
	author={Harden, RM},
	journal={Medical teacher},
	volume={23},
	number={2},
	pages={123--137},
	year={2001},
	publisher={Taylor \& Francis}
}

@article{west2000technology,
	title={Technology tools to make educational accountability work},
	author={West, Gary},
	journal={THE Journal (Technological Horizons In Education)},
	volume={28},
	number={5},
	pages={60},
	year={2000},
	publisher={1105 Media, Inc.}
}

@book{abran_guide_2004,
	address = {Piscataway, NJ, USA},
	title = {Guide to the {Software} {Engineering} {Body} of {Knowledge} 2004 {Version} - {SWEBOK}},
	isbn = {0-7695-1000-0},
	url = {http://portal.acm.org/citation.cfm?id=580192},
	abstract = {An abstract is not available.},
	publisher = {IEEE Press},
	author = {Abran, Alain and Bourque, Pierre and Dupuis, Robert and Moore, James W.},
	editor = {Abran, Alain and Bourque, Pierre and Dupuis, Robert and Moore, James W.},
	year = {2004},
	keywords = {in\_res\_library, sw\_natura}
}

@article{ballinger_spreadsheet_2003,
	title = {Spreadsheet visualisation to improve end-user understanding},
	url = {http://portal.acm.org/citation.cfm?id=857093},
	abstract = {Spreadsheets are an extremely common form of end-user programming that have many applications, from calculating student marks to accounting for global multinationals. Ways of studying the structure of a spreadsheet itself are normally constrained to the tools provided in the spreadsheet software. This paper explores new ways to visualise spreadsheets in a manner that is independent of the program they were created in, explains the technology involved, and presents examples of the visualisations that can be produced. The techniques involved in reading the spreadsheets also facilitate larger scale analysis of spreadsheets for performing corpus analysis.},
	journal = {ACM International Conference Proceeding Series; Vol. 142},
	author = {Ballinger, Daniel and Biddle, Robert and Noble, James},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura},
	pages = {99--109}
}

@inproceedings{bellettini_user_1999,
	address = {Los Angeles, California, United States},
	title = {User opinions and rewards in a reuse-based development system},
	isbn = {1-58113-101-1},
	url = {http://dx.doi.org/10.1145/303008.303071},
	doi = {10.1145/303008.303071},
	abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article. ACM has opted to expose the complete List rather than only correct and linked references.},
	booktitle = {{SSR} '99: {Proceedings} of the 1999 symposium on {Software} reusability},
	publisher = {ACM},
	author = {Bellettini, C. and Damiani, E. and Fugini, M. G.},
	year = {1999},
	keywords = {in\_res\_library, sw\_natura},
	pages = {151--158}
}

@inproceedings{bogart_end-user_2008,
	address = {Washington, DC, USA},
	series = {{VLHCC} '08},
	title = {End-user programming in the wild: {A} field study of {CoScripter} scripts},
	isbn = {978-1-4244-2528-0},
	url = {http://dx.doi.org/10.1109/vlhcc.2008.4639056},
	doi = {10.1109/vlhcc.2008.4639056},
	abstract = {Although a new class of languages has emerged to enable end users to create their own web applications, little is known about how end-user programmers actually use such languages in the real world. In this paper, we report a field study on over 1400 scripts collected from the internet which were created by early adopters of CoScripter, a web macro programming-by-demonstration language. We contrast these internet scripts with those written by users inside IBM, and describe script usage and re-usage patterns, features used, and users' clever workarounds for features not present in the language. The results show how users grapple with such programming notions as repetition, generalization, and reuse, sometimes inventing their own devices for these. Finally, we discuss the many scripts we found with social implications, whose purposes were to circumvent intended rules, regulations, and usage norm assumptions of a number of web sites.},
	booktitle = {Proceedings of the 2008 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing}},
	publisher = {IEEE Computer Society},
	author = {Bogart, Christopher and Burnett, Margaret and Cypher, Allen and Scaffidi, Christopher},
	year = {2008},
	keywords = {in\_res\_library, sw\_natura},
	pages = {39--46}
}

@inproceedings{brown_generalizing_2003,
	title = {Generalizing {WYSIWYT} {Visual} {Testing} to {Screen} {Transition} {Languages}},
	volume = {28},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.9.4027},
	abstract = {How can rigorous forms of testing be supported in a way that is both compatible with the visual aspect of visual programming languages, and usable by the audiences using those languages — even when the audience has no background in software engineering? Visual programs are likely to contain at least some errors, and supporting a visual form of testing would give users a way to spot those errors early in the program\&\#039;s life. In previous work, we have developed a visual testing methodology known as WYSIWYT, for use in visual spreadsheet languages, and in this work, we show formally that this methodology can be generalized to screen transition diagrams. The algorithms and accompanying proof of the coverage equivalence that they ensure provide the mechanisms needed for the screen transition paradigm to incorporate WYSIWYT testing for both professional and end-user programming audiences.},
	booktitle = {In {Proceedings} of the {IEEE} {Symposium} on {Human}-{Centric} {Computing} {Languages} and {Environments}},
	author = {Brown, Darren and Burnett, Margaret and Rothermel, Gregg and Fujita, Hamid and Negoro, Fumio},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura},
	pages = {203--210}
}


@book{brice_w_harris_program_2013,
	edition = {Fifth Edition},
	title = {Program and {Course} {Approval} {Handbook}},
	shorttitle = {{PCAH}},
	language = {English},
	author = {{Brice W. Harris}},
	month = sep,
	year = {2013}
}

@article{burnett_testing_2002,
	title = {Testing {Homogeneous} {Spreadsheet} {Grids} with the "{What} {You} {See} {Is} {What} {You} {Test}" {Methodology}},
	volume = {28},
	issn = {0098-5589},
	url = {http://dx.doi.org/10.1109/tse.2002.1010060},
	doi = {10.1109/tse.2002.1010060},
	abstract = {Although there has been recent research into ways to design environments that enable end users to create their own programs, little attention has been given to helping these end users systematically test their programs. To help address this need in spreadsheet systemsÂ¿the most widely used type of end-user programming languageÂ¿we previously introduced a visual approach to systematically testing individual cells in spreadsheet systems. However, the previous approach did not scale well in the presence of largely homogeneous grids, which introduce problems somewhat analogous to the array-testing problems of imperative programs. In this paper, we present two approaches to spreadsheet testing that explicitly support such grids. We present the algorithms, time complexities, and performance data comparing the two approaches. This is part of our continuing work to bring to end users at least some of the benefits of formalized notions of testing without requiring knowledge of testing beyond a naive level.},
	number = {6},
	journal = {IEEE Trans. Softw. Eng.},
	author = {Burnett, Margaret and Sheretov, Andrei and Ren, Bing and Rothermel, Gregg},
	month = jun,
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {576--594}
}

@book{clermont_analyzing_2003,
	title = {Analyzing large spreadsheet programs},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1287261},
	author = {Clermont, M.},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{erwig_automatic_2005,
	address = {St. Louis, MO, USA},
	series = {{ICSE} '05},
	title = {Automatic generation and maintenance of correct spreadsheets},
	isbn = {1-59593-963-2},
	url = {http://dx.doi.org/10.1145/1062455.1062494},
	doi = {10.1145/1062455.1062494},
	abstract = {Existing spreadsheet systems allow users to change cells arbitrarily, which is a major source of spreadsheet errors. We propose a system that prevents errors in spreadsheets by restricting spreadsheet updates to only those that are logically and technically correct. The system is based on the concept of templates that describe the principal structure of the initial spreadsheet and all of its future versions. We have developed a program generator that translates a template into an initial spreadsheet together with customized update operations for changing cells and inserting/deleting rows and columns for this particular template.We have designed a type system for templates that ensures the following form of "spreadsheet maintenance safety": Update operations that are generated from a type-correct template are proved to transform the spreadsheet only according to the template and to never produce any omission, reference, or type errors.Finally, we have developed a prototype as an extension to Excel, which has been shown by a preliminary usability study to be well accepted by end users.},
	booktitle = {Proceedings of the 27th international conference on {Software} engineering},
	publisher = {ACM},
	author = {Erwig, Martin and Abraham, Robin and Cooperstein, Irene and Kollmansberger, Steve},
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {136--145}
}

@article{erwig_software_2009,
	title = {Software {Engineering} for {Spreadsheets}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.140},
	doi = {10.1109/ms.2009.140},
	abstract = {The idiosyncratic structure of spreadsheets allows the adaptation of proven software engineering principles to an end-user domain and thus makes software engineering accessible to many users.},
	number = {5},
	journal = {IEEE Software},
	author = {Erwig, Martin},
	month = sep,
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {25--30}
}

@inproceedings{fisher_automated_2002,
	title = {Automated test case generation for spreadsheets},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1007963},
	abstract = {Spreadsheet languages, which include commercial spreadsheets and various research systems, have had a substantial impact on end-user computing. Research shows, however, that spreadsheets often contain faults. Thus, in previous work, we presented a methodology that assists spreadsheet users in testing their spreadsheet formulas. Our empirical studies have shown that this methodology can help end-users test spreadsheets more adequately and efficiently; however, the process of generating test cases can still represent a significant impediment. To address this problem, we have been investigating how to automate test case generation for spreadsheets in ways that support incremental testing and provide immediate visual feedback. We have utilized two techniques for generating test cases, one involving random selection and one involving a goal-oriented approach. We describe these techniques, and report results of an experiment examining their relative costs and benefits.},
	booktitle = {{ICSE} 2002. {Proceedings} of the 24rd {International} {Conference} on {Software} {Engineering}},
	author = {Fisher, M. and Cao, Mingming and Rothermel, G. and Cook, C. R. and Burnett, M. M.},
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {141--151}
}

@article{green_cognitive_2006,
	title = {Cognitive dimensions: {Achievements}, new directions, and open questions},
	volume = {17},
	url = {http://eprints.ucl.ac.uk/5125/1/5125.pdf},
	doi = {10.1016/j.jvlc.2006.04.004},
	abstract = {The cognitive dimensions framework has inspired research both more and less varied than expected. In this paper, we revisit the original aims and briefly describe some subsequent research, to consider whether the original aims were too austere in rejecting knowledge-based dimensions; whether the dimensions can be shown to have real-world relevance; and whether their definitions can be improved, either piecemeal or by refactoring the entire set. We mention some issues that remain unexplored, and conclude by describing two different ventures into defining clear procedures for real-life application, operating in very different milieux but both accepting that the framework should be developed from its original formulation.},
	number = {4},
	journal = {Ten Years of Cognitive Dimensions},
	author = {Green, T. R. G. and Blandford, A. E. and Church, L. and Roast, C. R. and Clarke, S.},
	year = {2006},
	keywords = {in\_res\_library, sw\_natura},
	pages = {328--365}
}

@techreport{hinchcliffe_emml_2009,
	title = {{EMML} {Changes} {Everything}: {Profitability}, {Predictability} \& {Performance} through {Enterprise} {Mashups}},
	url = {http://www.openmashup.org/whitepaper/},
	abstract = {Immediacy is power. Today, businesses have access to exponentially increasing amounts of real-time, near-real time, and historic data. Technologies, markets, and product lines can prove vital or irrelevant at a moment's notice, and organi-zations operating within the 2.0 environment need to respond to opportunities and challenges alike with agility and speed. Such acceleration of data creation - coupled with the market's natural evolution - requires stakeholders to leverage state of the art business intelligence (BI) in order to remain competitive. Over the last ﬁve years the enterprise mashup has steadily become BI's go-to technology, integrating and repurposing often untapped resources to enable well-informed so-lutions, foster productivity, streamline processes, facilitate innovation, invent new markets, and ultimately transform the way organizations conduct their business analysis.},
	institution = {Hinchcliffe \& Company},
	author = {Hinchcliffe, Dion and Bensonx, Jim},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{ko_designing_2004,
	address = {Vienna, Austria},
	title = {Designing the whyline: a debugging interface for asking questions about program behavior},
	isbn = {1-58113-702-8},
	url = {http://dx.doi.org/10.1145/985692.985712},
	doi = {10.1145/985692.985712},
	abstract = {Debugging is still among the most common and costly of programming activities. One reason is that current debugging tools do not directly support the inquisitive nature of the activity. Interrogative Debugging is a new debugging paradigm in which programmers can ask why did and even why didn't questions directly about their program's runtime failures. The Whyline is a prototype Interrogative Debugging interface for the Alice programming environment that visualizes answers in terms of runtime events directly relevant to a programmer's question. Comparisons of identical debugging scenarios from user tests with and without the Whyline showed that the Whyline reduced debugging time by nearly a factor of 8, and helped programmers complete 40\% more tasks.},
	booktitle = {{CHI} '04: {Proceedings} of the {SIGCHI} conference on {Human} factors in computing systems},
	publisher = {ACM},
	author = {Ko, Andrew J. and Myers, Brad A.},
	year = {2004},
	keywords = {in\_res\_library, sw\_natura},
	pages = {151--158}
}

@book{dyer2015learning,
  title={Learning MySQL and MariaDB: Heading in the Right Direction with MySQL and MariaDB},
  author={Dyer, Russell JT},
  year={2015},
  publisher={" O'Reilly Media, Inc."}
}

@inproceedings{ko_six_2004,
	address = {Rome},
	series = {{VLHCC} '04},
	title = {Six {Learning} {Barriers} in {End}-{User} {Programming} {Systems}},
	volume = {0},
	isbn = {0-7803-8696-5},
	url = {http://dx.doi.org/10.1109/vlhcc.2004.47},
	doi = {10.1109/vlhcc.2004.47},
	abstract = {As programming skills increase in demand and utility, the learnability of end-user programming systems is of utmost importance. However, research on learning barriers in programming systems has primarily focused on languages, overlooking potential barriers in the environment and accompanying libraries. To address this, a study of beginning programmers learning Visual Basic.NET was performed. This identified six types of barriers: design, selection, coordination, use, understanding, and information. These barriers inspire a new metaphor of computation, which provides a more learner-centric view of programming system design},
	booktitle = {2004 {IEEE} {Symposium} on {Visual} {Languages} - {Human} {Centric} {Computing}},
	publisher = {IEEE},
	author = {Ko, Andrew J. and Myers, B. A. and Aung, H. H.},
	year = {2004},
	keywords = {in\_res\_library, sw\_natura},
	pages = {199--206}
}

@book{lanzelotte_portinari_1993,
	title = {The {PORTINARI} {Project}: {Science} and {Art} team up together to help cultural projects},
	url = {http://www.odysci.com/article/1010112985730384/the-portinari-project-science-and-art-team-up-together-to-help-cultural-projects},
	abstract = {Candido Portinari (1903–1962) is the most famous Brazilian painter, whose production of more than 4500 works is spread all over the world. We are currently undertaking the design and production of the Catalogue Raisonné of his complete work. We developed a multimedia database, containing all the information needed for the catalogue. To load the pictures into the database, slides of the painter's works are digitized, using high-end scanners. Some problems arise, then, from the necessity of reliable methods for color control, correction and compression. We have used extensively computer-based techniques to support the development of the Catalogue, the Hypermedia Database and other scientific problems entailed by our research. This work summarizes the effort involved in such tasks, pointing out the technical problems and the solutions found.},
	publisher = {Pontifical Catholic University (PUC) of Rio de Janeiro},
	author = {Lanzelotte, R. S. G. and Marques, M. P. and Penna, M. C. S. G. and Portinari, J. C. and Ruiz, F. D. and Schwabe, D.},
	year = {1993},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{lutz_software_2000,
	address = {New York, NY, USA},
	title = {Software {Engineering} for {Safety}: {A} {Roadmap}},
	isbn = {1-58113-253-0},
	url = {http://dx.doi.org/10.1145/336512.336556},
	doi = {10.1145/336512.336556},
	booktitle = {{ICSE} '00: {Proceedings} of the {Conference} on {The} {Future} of {Software} {Engineering}},
	publisher = {ACM Press},
	author = {Lutz, Robyn R.},
	year = {2000},
	keywords = {in\_res\_library, sw\_natura},
	pages = {213--226}
}

@article{mandelin_jungloid_2005,
	title = {Jungloid mining: helping to navigate the {API} jungle},
	volume = {40},
	issn = {0362-1340},
	url = {http://dx.doi.org/10.1145/1065010.1065018},
	doi = {10.1145/1065010.1065018},
	abstract = {Reuse of existing code from class libraries and frameworks is often difficult because APIs are complex and the client code required to use the APIs can be hard to write. We observed that a common scenario is that the programmer knows what type of object he needs, but does not know how to write the code to get the object.In order to help programmers write API client code more easily, we developed techniques for synthesizing jungloid code fragments automatically given a simple query that describes that desired code in terms of input and output types. A jungloid is simply a unary expression; jungloids are simple, enabling synthesis, but are also versatile, covering many coding problems, and composable, combining to form more complex code fragments. We synthesize jungloids using both API method signatures and jungloids mined from a corpus of sample client programs.We implemented a tool, prospector, based on these techniques. prospector is integrated with the Eclipse IDE code assistance feature, and it infers queries from context so there is no need for the programmer to write queries. We tested prospector on a set of real programming problems involving APIs; prospector found the desired solution for 18 of 20 problems. We also evaluated prospector in a user study, finding that programmers solved programming problems more quickly and with more reuse when using prospector than without prospector.},
	number = {6},
	journal = {PLDI '05: Proceedings of the 2005 ACM SIGPLAN conference on Programming language design and implementation},
	author = {Mandelin, David and Xu, Lin and Bodík, Rastislav and Kimelman, Doug},
	month = jun,
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {48--61}
}

@inproceedings{nelson_complex_1965,
	title = {Complex information processing: a file structure for the complex, the changing and the indeterminate},
	url = {http://dx.doi.org/10.1145/800197.806036},
	doi = {10.1145/800197.806036},
	booktitle = {Proceedings of the 1965 20th national conference},
	publisher = {ACM Press},
	author = {Nelson, T. H.},
	year = {1965},
	keywords = {in\_res\_library, sw\_natura},
	pages = {84--100}
}

@article{newman_denim:_2003,
	title = {{DENIM}: {An} {Informal} {Web} {Site} {Design} {Tool} {Inspired} by {Observations} of {Practice}},
	volume = {18},
	issn = {0737-0024},
	url = {http://dx.doi.org/10.1207/s15327051hci1803_3},
	doi = {10.1207/s15327051hci1803_3},
	abstract = {Through a study of Web site design practice, we observed that designers employ multiple representations of Web sites as they progress through the design process and that these representations allow them to focus on different aspects of the design. In particular, we observed that Web site designers focus their design efforts at 3 different levels of granularity-site map, storyboard, and individual page-and that designers sketch at all levels during the early stages of design. Sketching on paper is especially important during the early phases of a project, when designers wish to explore many design possibilities quickly without focusing on low-level details. Existing Web design tools do not support such exploration tasks well, nor do they adequately integrate multiple site representations. Informed by these observations we developed DENIM: an informal Web site design tool that supports early phase information and navigation design of Web sites. It supports sketching input, allows design at different levels of granularity, and unifies the levels through zooming. Designers are able to interact with their sketched designs as if in a Web browser, thus allowing rapid creation and exploration of interactive prototypes. Based on an evaluation with professional designers as well as usage feedback from users who have downloaded DENIM from the Internet, we have made numerous improvements to the system and have received many positive reactions from designers who would like to use a system like DENIM in their work.},
	number = {3},
	journal = {HumanComputer Interaction},
	author = {Newman, Mark W. and Lin, James and Hong, Jason I. and Landay, James A.},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura},
	pages = {259--324}
}

@inproceedings{nichols_mobilization_2008,
	address = {Gran Canaria, Spain},
	series = {{IUI} '08},
	title = {Mobilization by demonstration: using traces to re-author existing web sites},
	isbn = {978-1-59593-987-6},
	url = {http://dx.doi.org/10.1145/1378773.1378793},
	doi = {10.1145/1378773.1378793},
	abstract = {Today's web pages provide many useful features, but unfortunately nearly all are designed first and foremost for the desktop form factor. At the same time, the number of mobile devices with different form factors and unique input and output facilities is growing substantially. The Highlight re-authoring environment addresses these problems by allowing users to start with existing sites they already use and create mobile versions that are customized to their tasks and mobile devices. This "re-authoring" is performed through a combination of demonstrating desired interactions with an existing web site and directly specifying content to be included on mobile pages. The system has been tested successfully with a variety of existing sites. A study showed that novice users were able to use the system to create useful mobile applications for sites of their own choosing.},
	booktitle = {Proceedings of the 13th international conference on {Intelligent} user interfaces},
	publisher = {ACM},
	author = {Nichols, Jeffrey and Lau, Tessa},
	year = {2008},
	keywords = {in\_res\_library, sw\_natura},
	pages = {149--158}
}

@inproceedings{rode_programming_2003,
	address = {Washington, DC, USA},
	title = {Programming at runtime: requirements and paradigms for nonprogrammer web application development},
	isbn = {0-7803-8225-0},
	url = {http://portal.acm.org/citation.cfm?id=1153917.1153962},
	abstract = {We investigate the feasability of nonprogrammer web application development and propose the creation of end-user programming tools that address the issue at a high level of abstraction. The results of three related empirical studies and one prototyping effort are reported. We surveyed nonprogrammers' needs for web applications and studied how nonprogrammers would naturally approach web development. To express what a tool should provide we summarize high-level components and concepts employed by web applications. To express how a tool may provide its functionality, we propose ” Programming-at-Runtime” - a programming paradigm that is in its core similar to the automatic recalculation in spreadsheets. Finally, we introduce ” FlashLight” - a protoype web development tool for nonprogrammers.},
	booktitle = {{HCC} '03: {Proceedings} of the 2003 {IEEE} {Symposium} on {Human} {Centric} {Computing} {Languages} and {Environments}},
	publisher = {IEEE Computer Society},
	author = {Rode, J. and Rosson, M. B.},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura},
	pages = {23--30}
}

@article{ronen_spreadsheet_1989,
	title = {Spreadsheet analysis and design},
	volume = {32},
	issn = {0001-0782},
	url = {http://dx.doi.org/10.1145/63238.63244},
	doi = {10.1145/63238.63244},
	abstract = {Although spreadsheet programs and microcomputers have revolutionized information processing in organizations, a significant number of serious errors have been reported through the misuse of this technology. This article discusses several different contexts for the development of spreadsheet models and presents structured design techniques for these models.},
	number = {1},
	journal = {Commun. ACM},
	author = {Ronen, Boaz and Palley, Michael A. and Lucas, Henry C.},
	year = {1989},
	keywords = {in\_res\_library, sw\_natura},
	pages = {84--93}
}

@inproceedings{rosson_everyday_2004,
	address = {Rome},
	title = {Everyday {Programming}: {Challenges} and {Opportunities} for {Informal} {Web} {Development}},
	volume = {0},
	isbn = {0-7803-8696-5},
	url = {http://dx.doi.org/10.1109/vlhcc.2004.26},
	doi = {10.1109/vlhcc.2004.26},
	abstract = {Semistructured interviews were conducted with twelve end users who develop and maintain Web content for diverse organizations. We discussed their general background and Web projects, with an emphasis on tool usage and problem-solving strategies. Our qualitative analysis of the interview results offers a socio-technical view of everyday programming, with an emphasis on the complex interactions between end-users' personal history, organizational context, and tool use},
	booktitle = {2004 {IEEE} {Symposium} on {Visual} {Languages} - {Human} {Centric} {Computing}},
	publisher = {IEEE},
	author = {Rosson, M. B. and Ballin, J. and Nash, H.},
	year = {2004},
	keywords = {in\_res\_library, sw\_natura},
	pages = {123--130}
}

@inproceedings{schwabe_building_1995,
	address = {Washington, DC, USA},
	series = {{HICSS} '95},
	title = {Building hypermedia applications as navigational views of information models},
	isbn = {0-8186-6940-3},
	url = {http://portal.acm.org/citation.cfm?id=798221},
	abstract = {Presents a novel approach for defining hypermedia applications as navigational views of an object-oriented hypermedia schema. We briefly describe an object-oriented hypermedia design model (OOHDM) using an academic information system as a concrete example to illustrate each modeling construct. We further analyze the whole process of hypermedia applications building, focusing mainly on navigational design. The approach we propose allows clean separation of the content design, navigational design and abstract interface design. Such separation of concerns allows seamless evolution from abstract domain models to concrete implementation of hypermedia applications, especially those in which there is a wide range of information to be handled.},
	booktitle = {Proceedings of the 28th {Hawaii} {International} {Conference} on {System} {Sciences}},
	publisher = {IEEE Computer Society},
	author = {Schwabe, D. and Rossi, G.},
	year = {1995},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{wiedenbeck_facilitators_2005,
	address = {Dallas, TX, USA},
	title = {Facilitators and {Inhibitors} of {End}-{User} {Development} by {Teachers} in a {School} {Environment}},
	volume = {0},
	isbn = {0-7695-2443-5},
	url = {http://dx.doi.org/10.1109/vlhcc.2005.36},
	doi = {10.1109/vlhcc.2005.36},
	abstract = {This paper describes the perceptions and attitudes of teachers who are end-user developers. A semi-structured interview of 22 teachers was carried out. It revealed motivational, situational, knowledge, and tool factors that affect their programming efforts. Five of the survey participants also carried out several program maintenance tasks in order to identify additional challenges in performing end-user programming tasks. The contribution of the study is an understanding of the facilitators and inhibitors of end-user development in a particular professional setting.},
	booktitle = {2005 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}'05)},
	publisher = {IEEE},
	author = {Wiedenbeck, S.},
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {215--222}
}

@article{ye_reuse-conducive_2005,
	title = {Reuse-{Conducive} {Development} {Environments}},
	volume = {12},
	issn = {0928-8910},
	url = {http://dx.doi.org/10.1007/s10515-005-6206-x},
	doi = {10.1007/s10515-005-6206-x},
	abstract = {Despite its well-recognized benefits, software reuse has not met its expected success due to technical, cognitive, and social difficulties. We have systematically analyzed the reuse problem (especially the cognitive and social difficulties faced by software developers who reuse) from a multidimensional perspective, drawing on our long-term research on information retrieval, human-computer interaction, and knowledge-based systems. Based on this analysis, we propose the concept of reuse-conducive development environments, which encourage and enable software developers to reuse through the smooth integration of reuse repository systems and development environments. We have designed, implemented, and evaluated CodeBroker—a reuse-conducive development environment—that autonomously locates and delivers task-relevant and personalized components into the current software development environment. Empirical evaluations of CodeBroker have shown that the system is effective in promoting reuse by enabling software developers to reuse components unknown to them, reducing the difficulties in locating components, and augmenting the programming capability of software developers.},
	number = {2},
	journal = {Automated Software Engineering},
	author = {Ye, Yunwen and Fischer, Gerhard},
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {199--235}
}

@article{becker_rapid_2002,
	title = {Rapid {Application} {Design} and {Testing} of {Web} {Usability}},
	volume = {9},
	issn = {1070-986X},
	url = {http://dx.doi.org/10.1109/mmul.2002.1041947},
	doi = {10.1109/mmul.2002.1041947},
	abstract = {The rapid application design and testing (RAD-T) process greatly advances time-driven development of Web applications without sacrificing usability. Our GUI-based toolset, in conjunction with an extension of HTML, provides for early usability testing at the onset of Web specification and design activities.},
	number = {4},
	journal = {IEEE MultiMedia},
	author = {Becker, Shirley A. and Berkemeyer, Anthony},
	month = oct,
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {38--46}
}

@article{garzotto_hdm:_1993,
	title = {{HDM}: a model-based approach to hypertext application design},
	volume = {11},
	number = {1},
	journal = {ACM Transactions on Information Systems},
	author = {Garzotto, Franca and Paolini, Paolo and Schwabe, Daniel},
	year = {1993},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{montero_requirements_2002,
	title = {Requirements for hypermedia development methods: {A} survey of outstanding method},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.74.6346},
	abstract = {The aim of this paper is to present a framework of requirements to survey design methods for hypermedia systems. Such requirements are taken from software engineering as well as from hypermedia engineering fields. Finally, these requirements are applied to a set of outstanding design methods in order to identify both their good qualities and their lacks. 1},
	booktitle = {In {Proc}. of {Advanced} {Information} {Systems} {Engineering}, 14th {International} {Conference}, {CAiSE}},
	author = {Montero, Susana and Dí­az, Paloma and Aedo, Ignacio},
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {747--751}
}

@article{osterbye_literate_1995,
	title = {Literate {Smalltalk} {Programming} {Using} {Hypertext}},
	volume = {21},
	issn = {0098-5589},
	url = {http://dx.doi.org/10.1109/32.345829},
	doi = {10.1109/32.345829},
	abstract = {The problem examined in this paper is: How and to what extent can hypertext support literate programming in Smalltalk? In order to examine this question we have created a hypertext system which allows us to write Smalltalk code and documentation, and to link code and documentation freely. The literate programs created in hypertext differ from those created with traditional literate programming tools. The main difference is that hypertext-based program exposition promotes description of program dependencies and is perhaps less suited for the detailed exposition of algorithms.},
	number = {2},
	journal = {IEEE Trans. Softw. Eng.},
	author = {Østerbye, Kasper},
	month = feb,
	year = {1995},
	keywords = {in\_res\_library, sw\_natura},
	pages = {138--145}
}

@inproceedings{sutcliffe_contributions_2003,
	address = {Creete, Greece},
	title = {Contributions, {Costs} and {Prospects} for {End}-{User} {Development}},
	volume = {2},
	url = {http://www.springerlink.com/index/nr0361373p975004.pdf},
	abstract = {End-user development (EUD) has been a Holy Grail of software tool developers since James Martin launched 4th generation computing environments in the early eighties. Even though there has been considerable success in adaptable and programmable applications, EUD has yet to become a mainstream competitor in the software development marketplace. This paper presents a framework that critically evaluates the contributions of EUD environments in terms of the domains they can address, the modality and media of user-system communication, and degree of automation in the development process. The second part of the paper describes a socio-economic model of EUD costs and motivations.},
	booktitle = {{HCI} {International} 2003},
	publisher = {Lawrence Erlbaum},
	author = {Sutcliffe, Alistair and Lee, Darren and Mehandjiev, Nik},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura}
}

@book{brandon_software_2008,
	edition = {1},
	title = {Software {Engineering} for {Modern} {Web} {Applications}: {Methodologies} and {Technologies} ({Premier} {Reference} {Source})},
	isbn = {1-59904-492-7},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1599044927},
	abstract = {As modern organizations migrate from older information architectures to new Web-based systems, the discipline of software engineering is changing both in terms of technologies and methodologies. There is a need to examine this new frontier from both a theoretical and pragmatic perspective, and offer not only a survey of new technologies and methodologies but discussions of the applicability and pros/cons of each. **Software Engineering for Modern Web Applications: Methodologies and Technologies** presents current, effective software engineering methods for the design and development of modern Web-based applications, offering scholars, researchers, and practitioners innovative research on the theoretical frameworks, structures, management, and implications software engineering for modern Web applications.},
	publisher = {IGI Global},
	author = {Brandon, Daniel M.},
	month = jun,
	year = {2008},
	note = {Published: Hardcover},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{greenberg_usability_2008,
	address = {Florence, Italy},
	series = {{CHI} '08},
	title = {Usability evaluation considered harmful (some of the time)},
	isbn = {978-1-60558-011-1},
	url = {http://dx.doi.org/10.1145/1357054.1357074},
	doi = {10.1145/1357054.1357074},
	abstract = {Current practice in Human Computer Interaction as encouraged by educational institutes, academic review processes, and institutions with usability groups advocate usability evaluation as a critical part of every design process. This is for good reason: usability evaluation has a significant role to play when conditions warrant it. Yet evaluation can be ineffective and even harmful if naively done 'by rule' rather than 'by thought'. If done during early stage design, it can mute creative ideas that do not conform to current interface norms. If done to test radical innovations, the many interface issues that would likely arise from an immature technology can quash what could have been an inspired vision. If done to validate an academic prototype, it may incorrectly suggest a design's scientific worthiness rather than offer a meaningful critique of how it would be adopted and used in everyday practice. If done without regard to how cultures adopt technology over time, then today's reluctant reactions by users will forestall tomorrow's eager acceptance. The choice of evaluation methodology - if any - must arise from and be appropriate for the actual problem or research question under consideration.},
	booktitle = {Proceedings of the {SIGCHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher = {ACM},
	author = {Greenberg, Saul and Buxton, Bill},
	year = {2008},
	keywords = {in\_res\_library, sw\_natura},
	pages = {111--120}
}

@book{chacon2014pro,
  title={Pro git},
  author={Chacon, Scott and Straub, Ben},
  year={2014},
  publisher={Apress}
}

@article{bauer2005hibernate,
  title={Hibernate in action},
  author={Bauer, Christian and King, Gavin},
  year={2005},
  publisher={Manning Greenwich CT}
}

@book{eckel_thinking_2006,
	edition = {4},
	title = {Thinking in {Java} (4th {Edition})},
	isbn = {0-13-187248-6},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131872486},
	abstract = {{\textless}I{\textgreater}Thinking in Java{\textless}/I{\textgreater} is a printed version of Bruce Eckel's online materials that provides a useful perspective on mastering Java for those with previous programming experience. The author's take on the essence of Java as a new programming language and the thorough introduction to Java's features make this a worthwhile tutorial.{\textless}p{\textgreater} {\textless}I{\textgreater}Thinking in Java{\textless}/I{\textgreater} begins a little esoterically, with the author's reflections on why Java is new and better. (This book's choice of font for chapter headings is remarkably hard on the eyes.) The author outlines his thoughts on why Java will make you a better programmer, without all the complexity. The book is better when he presents actual language features. There's a tutorial to basic Java types, keywords, and operators. The guide includes extensive source code that is sometimes daunting (as with the author's sample code for {\textless}I{\textgreater}all{\textless}/I{\textgreater} the Java operators in one listing.) As such, this text will be most useful for the experienced developer.{\textless}p{\textgreater} The text then moves on to class design issues, when to use inheritance and composition, and related topics of information hiding and polymorphism. (The treatment of inner classes and scoping will likely seem a bit overdone for most readers.) The chapter on Java collection classes for both Java Developer's Kit (JDK) 1.1 and the new classes, such as sets, lists, and maps, are much better. There's material in this chapter that you are unlikely to find anywhere else.{\textless}p{\textgreater} Chapters on exception handling and programming with type information are also worthwhile, as are the chapters on the new Swing interface classes and network programming. Although it adopts somewhat of a mixed-bag approach, {\textless}I{\textgreater}Thinking in Java{\textless}/I{\textgreater} contains some excellent material for the object-oriented developer who wants to see what all the fuss is about with Java. The legendary author Bruce Eckel brings Java to life with this extraordinarily insightful, opinionated and downright funny introduction. {\textless}I{\textgreater}Thinking in Java{\textless}/i{\textgreater} introduces all of the language's fundamentals, one step at a time, using to-the-point code examples. More than virtually any other book, {\textless}I{\textgreater}Thinking in Java{\textless}/i{\textgreater} helps you understand not just what to do – but why. Eckel introduces all the basics of objects as Java uses them; then walks carefully through the fundamental concepts underlying all Java programming – including program flow, initialization and cleanup, hiding implementations, reusing classes and polymorphism. Using extensive, to-the-point examples, he introduces error handling, exceptions, Java I/O, run-time type identification, and passing and returning objects. He covers the Java AWT, multithreading, network programming with Java – even design patterns. The best way to understand the real value of this book is to hear what readers of the online version have been saying about it: "much better than any other Java book I've seen, by an order of magnitude..." "mature, consistent, intellectually honest, well-written and precise..." "a thoughtful, penetrating analytical tutorial which doesn't kowtow to the manufacturers..." "Thank you again for your awesome book. I was really floundering, but your book has brought me up to speed as quickly as I could read it!"For both beginner and experienced C and C++ programmers who want to learn Java. {\textless}P{\textgreater}* From the basics of object development, all the way to design patterns and other advanced topics. {\textless}P{\textgreater}* By the author of the best-selling Thinking in C++ – winner of the 1995 Jolt Cola Award! {\textless}P{\textgreater}* On-line version has already received tens of thousands of hits – there's a huge built-in demand for this book!},
	publisher = {Prentice Hall},
	author = {Eckel, Bruce},
	month = feb,
	year = {2006},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{basham_head_2004,
	edition = {1st},
	title = {Head {First} {Servlets} and {JSP}: {Passing} the {Sun} {Certified} {Web} {Component} {Developer} {Exam} ({SCWCD})},
	isbn = {0-596-00540-7},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0596005407},
	publisher = {CreateSpace Independent Publishing Platform},
	author = {Basham, Bryan and Sierra, Kathy and Bates, Bert},
	year = {2004},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{ross_principles_2003,
	series = {Addison-{Wesley} {Information} {Technology} {Series}},
	title = {Principles of the {Business} {Rule} {Approach}},
	isbn = {0-201-78893-4},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201788934},
	publisher = {Addison-Wesley Professional},
	author = {Ross, Ronald G.},
	month = feb,
	year = {2003},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{blackwell_interdisciplinary_2007,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {Interdisciplinary {Design} {Research} for {End}-{User} {Software} {Engineering}},
	url = {http://drops.dagstuhl.de/opus/frontdoor.php?source_opus=1078},
	abstract = {How does EUSE research build on empirical studies of programmers, and what kinds of empirical research might provide foundations for future EUSE research? My own work on interdisciplinary design draws comparisons across academic and professional boundaries, applying the results to the design of new technologies, and the critical assessment of technology.},
	number = {07081},
	publisher = {Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany},
	author = {Blackwell, Alan},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	year = {2007},
	keywords = {in\_res\_library, sw\_natura}
}

@book{gross_designers_2007,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {Designers {Need} {End}-{User} {Software} {Engineering}},
	abstract = {This position paper for the End-User Software Engineering workshop outlines three systems that employ end user programming for designers: a constraint-based design environment; a sketch recognition interface for knowledge based systems, and a physical programming environment for building modular robots.},
	number = {07081},
	publisher = {Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany},
	author = {Gross, Mark D.},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	year = {2007},
	keywords = {in\_res\_library, sw\_natura}
}

@book{segal_end-user_nodate,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {End-{User} {Software} {Engineering} and {Professional} {End}-{User} {Developers}},
	abstract = {There is a great variety of end user developers and a great variety of contexts within which they develop. End user developers may have little or no experience of using computers Ã¢â'¬â€øe or may be adept coders in general purpose programming languages. They may develop their software on their own over a few minutes Ã¢â'¬â€øe or in groups over years. The software produced may be for their own use only Ã¢â'¬â€øe or for a large community of users. It may be inconsequential Ã¢â'¬â€øe or the consequences of its failure may be great. In this paper, we identify and discuss the problems of one particular group of end user developers Ã¢â'¬â€øe professional end user developers Ã¢â'¬â€øe who have no fear of coding and who develop software which plays a vital part in furthering their professional goals.},
	number = {07081},
	publisher = {Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany},
	author = {Segal, Judith},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	keywords = {in\_res\_library, sw\_natura}
}

@book{burnett_07081_nodate,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {07081 {Abstracts} {Collection} — {End}-{User} {Software} {Engineering}},
	abstract = {From 18.01.07 to 23.02.07, the Dagstuhl Seminar 07081 “End-User Software Engineering” was held in the International Conference and Research Center (IBFI), Schloss Dagstuhl. During the seminar, several participants presented their current research, and ongoing work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and ideas are put together in this paper. The first section describes the seminar topics and goals in general. Links to extended abstracts or full papers are provided, if available.},
	number = {07081},
	publisher = {Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany},
	author = {Burnett, Margaret M. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	editor = {Burnett, Margaret M. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	keywords = {in\_res\_library, sw\_natura}
}

@article{mcdaid_test-driven_2009,
	title = {Test-{Driven} {Development} for {Spreadsheet} {Risk} {Management}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.143},
	doi = {10.1109/ms.2009.143},
	abstract = {Spreadsheet technology is central to the functioning of the financial sector, but the spreadsheets themselves can have a high level of error that requires innovative supporting processes and tools. Several large-scale international studies conducted in response to the Enron-inspired Sarbanes-Oxley Act confirm the importance and complexity of spreadsheet systems in financial reporting, with some companies using 200+ spreadsheets in manually controlled interconnected "webs." Unfortunately, spreadsheets frequently have an unacceptably high number of faults. Early research indicated that between 2 and 5 percent of cell formulas can be incorrect, but a more recent study found that of 50 real-world operational spreadsheets audited, 94 percent contained errors with almost 1 percent of formula cells found to be incorrect. Spreadsheet developers don't appreciate this high risk and thus use little or no formal software development processes.},
	number = {5},
	journal = {Software, IEEE},
	author = {McDaid, Kevin and Rust, Alan},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {31--36}
}

@book{turbak_design_2008,
	title = {Design {Concepts} in {Programming} {Languages}},
	isbn = {0-262-20175-5},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262201755},
	abstract = {Hundreds of programming languages are in use today—scripting languages for Internet commerce, user interface programming tools, spreadsheet macros, page format specification languages, and many others. Designing a programming language is a metaprogramming activity that bears certain similarities to programming in a regular language, with clarity and simplicity even more important than in ordinary programming. This comprehensive text uses a simple and concise framework to teach key ideas in programming language design and implementation. The book's unique approach is based on a family of syntactically simple pedagogical languages that allow students to explore programming language concepts systematically. It takes as its premise and starting point the idea that when language behaviors become incredibly complex, the description of the behaviors must be incredibly simple. The book presents a set of tools (a mathematical metalanguage, abstract syntax, operational and denotational semantics) and uses it to explore a comprehensive set of programming language design dimensions, including dynamic semantics (naming, state, control, data), static semantics (types, type reconstruction, polymporphism, effects), and pragmatics (compilation, garbage collection). The many examples and exercises offer students opportunities to apply the foundational ideas explained in the text. Specialized topics and code that implements many of the algorithms and compilation methods in the book can be found on the book's Web site, along with such additional material as a section on concurrency and proofs of the theorems in the text. The book is suitable as a text for an introductory graduate or advanced undergraduate programming languages course; it can also serve as a reference for researchers and practitioners.},
	publisher = {The MIT Press},
	author = {Turbak, Franklyn A. and Gifford, David K. and Sheldon, Mark A.},
	year = {2008},
	note = {Published: Hardcover},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{ko_six_2004-1,
	title = {Six {Learning} {Barriers} in {End}-{User} {Programming} {Systems}},
	volume = {2005},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.9351},
	abstract = {As programming skills increase in demand and utility, the learnability of end-user programming systems is of utmost importance. However, research on learning barriers in programming systems has primarily focused on languages, overlooking potential barriers in the environment and accompanying libraries. To address this, a study of beginning programmers learning Visual Basic.NET was performed. This identified six types of barriers: design, selection, coordination, use, understanding, and information. These barriers inspire a new metaphor of computation, which provides a more learner-centric view of programming system design.},
	booktitle = {{IEEE} {SYMP}. {ON} {VLHCC}},
	author = {Ko, Andrew J. and Myers, Brad A. and Aung, Htet H.},
	year = {2004},
	keywords = {hci},
	pages = {199--206}
}

@inproceedings{hoyer_market_2008,
	address = {Sydney, Australia},
	series = {{ICSOC} '08},
	title = {Market {Overview} of {Enterprise} {Mashup} {Tools}},
	volume = {5364},
	isbn = {978-3-540-89647-0},
	url = {http://dx.doi.org/10.1007/978-3-540-89652-4_62},
	doi = {10.1007/978-3-540-89652-4_62},
	abstract = {A new paradigm, known as Enterprise Mashups, has been gain momentum during the last years. By empowering actual business end-users to create and adapt individual enterprise applications, Enterprise Mashups implicate a shift concerning a collaborative software development and consumption process. Upcoming Mashup tools prove the growing relevance of this paradigm in the industry, both in the consumer and enterprise-oriented market. However, a market overview of the different tools is still missing. In this paper, we introduce a classification of Mashup tools and evaluate selected tools of the different clusters according to the perspectives general information, functionality and usability. Finally, we classify more than 30 tools in the designed classification model and present the observed market trends in context of Enterprise Mashups.},
	booktitle = {Proceedings of the 6th {International} {Conference} on {Service}-{Oriented} {Computing}},
	publisher = {Springer-Verlag},
	author = {Hoyer, Volker and Fischer, Marco},
	year = {2008},
	pages = {708--721}
}

@inproceedings{ko_eliciting_2005,
	title = {Eliciting {Design} {Requirements} for {Maintenance}- {Oriented} {IDE}'s: {A} {Detailed} {Study} of {Corrective} and {Perfective} {Maintenence} {Tasks}},
	url = {http://repository.cmu.edu/hcii/179/},
	abstract = {Recently, several innovative tools have found their way into mainstream use in modern development environments. However, most of these tools have focused on creating and modifying code, despite evidence that most of programmers' time is spent understanding code as part of maintenance tasks. If new tools were designed to directly support these maintenance tasks, what types would be most helpful? To find out, a study of expert Java programmers using Eclipse was performed. The study suggests that maintenance work consists of three activities: (1) forming a working set of task-relevant code fragments; (2) navigating the dependencies within this working set; and (3) repairing or creating the necessary code. The study identified several trends in these activities, as well as many opportunities for new tools that could save programmers up to 35\% of the time they currently spend on maintenance tasks.},
	author = {Ko, Andrew J. and Aung, Htet H. and Myers, Brad A.},
	month = may,
	year = {2005}
}

@article{shu_visual_1989,
	title = {Visual programming: perspectives and approaches},
	volume = {28},
	issn = {0018-8670},
	url = {http://portal.acm.org/citation.cfm?id=98466.98474},
	abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article. ACM has opted to expose the complete List rather than only correct and linked references.},
	number = {4},
	journal = {IBM Syst. J.},
	author = {Shu, N. C.},
	year = {1989},
	keywords = {propuesta},
	pages = {525--547}
}

@inproceedings{modugno_evaluating_1995,
	address = {Denver, Colorado, United States},
	series = {{CHI} '95},
	title = {Evaluating program representation in a demonstrational visual shell},
	isbn = {0-89791-755-3},
	url = {http://dx.doi.org/10.1145/223355.223546},
	doi = {10.1145/223355.223546},
	abstract = {An abstract is not available.},
	booktitle = {Conference companion on {Human} factors in computing systems},
	publisher = {ACM},
	author = {Modugno, Francesmary and Corbett, Albert T. and Myers, Brad A.},
	year = {1995},
	keywords = {propuesta},
	pages = {234--235}
}

@inproceedings{martig_interacciones_2006,
	title = {Interacciones básicas en el modelo unificado de visualización},
	booktitle = {Memorias del {XII} {Congreso} {Argentino} de {Ciencias} de la {Computación} ({CACIC} 2006)},
	author = {Martig, Sergio and Castro, Silvia},
	year = {2006},
	pages = {747--760},
	annote = {Martig2006-MUV-Interacciones.pdf}
}

@inproceedings{martig_modelo_2003,
	title = {Un modelo unificado de visualización},
	booktitle = {Memorias del {IX} {Congreso} {Argentino} de {Ciencias} de la {Computación} ({CACIC} 2003)},
	author = {Martig, Sergio and Castro, Silvia and Fillottrani, Pablo and Estvez, Elsa},
	year = {2003},
	pages = {881--892},
	annote = {Martig2003-Un Modelo Unificado de Visualización.pdf}
}

@book{lazar_research_2010,
	edition = {1},
	title = {Research {Methods} in {Human}-{Computer} {Interaction}},
	isbn = {0-470-72337-8},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0470723378},
	publisher = {Wiley},
	author = {Lazar, Jonathan and Feng, Jinjuan H. and Hochheiser, Harry},
	month = feb,
	year = {2010},
	note = {Published: Paperback}
}

@inproceedings{harrison_omnitouch:_2011,
	address = {Santa Barbara, California, USA},
	series = {{UIST} '11},
	title = {{OmniTouch}: wearable multitouch interaction everywhere},
	isbn = {978-1-4503-0716-1},
	url = {http://dx.doi.org/10.1145/2047196.2047255},
	doi = {10.1145/2047196.2047255},
	abstract = {OmniTouch is a wearable depth-sensing and projection system that enables interactive multitouch applications on everyday surfaces. Beyond the shoulder-worn system, there is no instrumentation of the user or environment. Foremost, the system allows the wearer to use their hands, arms and legs as graphical, interactive surfaces. Users can also transiently appropriate surfaces from the environment to expand the interactive area (e.g., books, walls, tables). On such surfaces - without any calibration - OmniTouch provides capabilities similar to that of a mouse or touchscreen: X and Y location in 2D interfaces and whether fingers are "clicked" or hovering, enabling a wide variety of interactions. Reliable operation on the hands, for example, requires buttons to be 2.3cm in diameter. Thus, it is now conceivable that anything one can do on today's mobile devices, they could do in the palm of their hand.},
	booktitle = {Proceedings of the 24th annual {ACM} symposium on {User} interface software and technology},
	publisher = {ACM},
	author = {Harrison, Chris and Benko, Hrvoje and Wilson, Andrew D.},
	year = {2011},
	pages = {441--450}
}

@incollection{grammel_survey_2010,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {A {Survey} of {Mashup} {Development} {Environments}},
	volume = {6400},
	isbn = {978-3-642-16598-6},
	url = {http://books.google.com/books?hl=de&#38;lr=&#38;id=E_Hb-HZ3lwwC&#38;oi=fnd&#38;pg=PA137&#38;ots=4XcDdMVZOI&#38;sig=PRo2TvIUGsm4MJL-sU69oLtReFI#v=onepage&#38;q&#38;f=false},
	abstract = {This chapter presents a survey of six mashup development environments and looks at how mashups fit into the vision of the smart internet. The fast-paced expansion of mashup development environments has resulted in a wealth of features and approaches. To provide an overview of End User Development support in current mashup development environments, we explore, summarize and compare their features across six different themes (Levels of Abstraction, Learning Support, Community Support, Discoverability, User Interface Design and Software Engineering Techniques). We found that the mashup development environments provide many features to support end users, but there is still much room for further improvement, especially in relation to the smart internet. We believe that by connecting matters of concern to mashups, mashup development environments can become an essential part of the smart internet. Such a connection would enable mining of mashup elements, which could facilitate automatic mashup creation and customization.},
	booktitle = {The {Smart} {Internet}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Grammel, Lars and Storey, Margaret-Anne},
	editor = {Chignell, Mark and Cordy, James and Ng, Joanna and Yesha, Yelena},
	year = {2010},
	pages = {137--151}
}

@book{lengua_diccionario_2010,
	edition = {22nd},
	title = {Diccionario de la {Lengua} {Espanola} ({Spanish} {Edition}) (2 volumes)},
	isbn = {84-239-6814-6},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/8423968146},
	publisher = {Real Academia Espanola},
	author = {Lengua, Real Academia de la},
	month = may,
	year = {2010},
	note = {Published: Hardcover}
}

@book{co-operation_manual_2003,
	title = {Manual de {Frascati} 2002. {Propuesta} de {Norma} {Práctica} para {Encuestas} de {Investigación} y {Desarrollo} {Experimental}},
	publisher = {Fundación Española para la Ciencia y la Tecnología},
	author = {Co-operation, Organization for Economic and Development},
	year = {2003}
}

@book{sommerville_software_2006,
	edition = {8},
	title = {Software {Engineering}: ({Update}) (8th {Edition})},
	isbn = {0-321-31379-8},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321313798},
	abstract = {Sensible choice and organization of topics, made all the more authoritative by the author's credentials as a senior academic in the area Prof. David S. Rosenblum, University College London I find Somerville inviting and readable and with more appropriate content Julian Padget, University of Bath Sommerville takes case studies from radically different areas of SE. This avoids excessive stereotyping (hence blinkering), but permits some depth and detail. Dr C Lester, Portsmouth University Software Engineering 8 presents a broad perspective on software systems engineering, concentrating on widely used techniques for developing large-scale systems. Structured into 6 parts: 1: Introduction; 2: Requirements Engineering; 3: Design; 4: Software Development; 5: Verification and Validation; 6: Management And now with additional new chapters on System Security Engineering, Aspect-oriented Software Development, and Service-oriented systems! Building on the widely acclaimed strengths of the 7th edition, 8 updates readers with the latest developments in the field, whilst maintaining the structure and content of the 7th easily upward compatible for those using the text in a teaching environment.},
	publisher = {Addison Wesley},
	author = {Sommerville, Ian},
	month = jun,
	year = {2006},
	note = {Published: Hardcover}
}

@book{orszag_memorandum_2009,
	title = {Memorandum for the {Heads} of {Executive} {Departments} and {Agencies}: {Open} {Government} {Directive}. {M}-10-06},
	publisher = {Executive Office of the President of the United States of America. Office of Management and Budget.},
	author = {Orszag, Peter R.},
	year = {2009},
	note = {Published: Memorandum.}
}

@incollection{koschmider_elucidating_2009,
	title = {Elucidating the {Mashup} {Hype}: {Definition}, {Challenges}, {Methodical} {Guide} and {Tools} for {Mashups}},
	url = {http://www.aifb.kit.edu/images/9/96/2009_1943_Koschmider_Elucidating_the_1.pdf},
	booktitle = {Construction},
	author = {Koschmider, A. and Torres, V. and Pelechano, V.},
	year = {2009}
}

@inproceedings{koschmider_elucidating_2009-1,
	address = {Madrid, Spain},
	title = {Elucidating the {Mashup} {Hype}: {Definition}, {Challenges}, {Methodical} {Guide} and {Tools} for {Mashups}},
	abstract = {Mashups are a current hype that is attracting high interest by academia and industry now and in the next years. The idea behind a mashup is to create new content by reusing and combining existing content from heterogeneous sources. Advantages of mashups are that even people with no knowledge of programming languages can easily build new Web applications and create new forms of visualizations. To support the mashup construction process several tools have been proposed with easy-to-use functionalities. However, from the research perspective it is dissatisfying that neither a clear definition and classification model for mashups nor a separation between mashups and other forms of application integrations exist. The aim of this paper is to elucidate the mashup hype by providing a definition and classification model for mashups and to sketch a methodical engineering guide for mashups. Additionally, an overview of tools and languages supporting the mashup creation is presented.},
	booktitle = {2nd {Workshop} on {Mashups}, {Enterprise} {Mashups} and {Lightweight} {Composition} on the {Web}},
	author = {Koschmider, Agnes and Torres, Victoria and Pelechano, Vicente},
	year = {2009}
}

@book{cobb2015project,
	title={The project manager's guide to mastering Agile: Principles and practices for an adaptive approach},
	author={Cobb, Charles G},
	year={2015},
	publisher={John Wiley \& Sons}
}

@inproceedings{wilkes2002curriculum,
	title={Is a Curriculum Management System in Your Future?},
	author={Wilkes, Floyd A and Johnson, David W and Ormond, Pat},
	booktitle={Inf. Syst. Educ. Conf.},
	year={2002}
}

@incollection{stober_overview_2010,
	address = {Berlin, Heidelberg},
	title = {Overview of {Agile} {Software} {Development}},
	isbn = {978-3-540-70830-8},
	url = {http://dx.doi.org/10.1007/978-3-540-70832-2_3},
	abstract = {Agile thinking is an attempt to simplify things by reducing complexity of planning, by focusing on customer value, and by shaping a fruitful climate of participation and collaboration. There are a vast number of methods, techniques, best practices, that claim to be agile. In this chap. we want to give an overview of the most common ones. The five principles of a fractal team, which we introduced in Chap. 1, apply to most of them: self-similarity, goal orientation, self organization, self improvement, and vitality are cornerstones when implementing an organization capable of executing software projects in an agile way. The desire to establish flexible and efficient development processes which produce high quality results is not new and has not only been applied to software development: More than two decades ago, the manufacturing industry underwent dramatic changes, when the traditional production concepts of Taylor and Ford were challenged by extremely successful Japanese enterprises such as Toyota. The Western hemisphere was puzzled at how the competition from Far East seemed to be able to produce better quality at lower cost and quickly began to outperform the rest of the world. What happened? What was the secret of the amazing efficiency and innovation?},
	booktitle = {Agile {Software} {Development}},
	publisher = {Springer Berlin Heidelberg},
	author = {Stober, Thomas and Hansmann, Uwe and Stober, Thomas and Hansmann, Uwe},
	year = {2010},
	pages = {35--59}
}

@incollection{ortiz-chamorro_hypertextual_2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Hypertextual {Programming} for {Domain}-{Specific} {End}-{User} {Development}},
	volume = {5435},
	isbn = {978-3-642-00425-4},
	url = {http://dx.doi.org/10.1007/978-3-642-00427-8_13},
	abstract = {Domain-specific languages (DSLs) have successfully been used for end-user development. However, dealing with language syntax poses significant learning challenges. In this paper, we introduce hypertextual programming, a technique that represents language syntax as hypertext. With this technique, instead of dealing with textual languages, users can inspect and construct their programs mainly by using navigation. Beyond merely representing the syntax, hypertext can be used to provide various views of a single program code. Nevertheless, to reap the benefits of this technique, adequate hypertextual editors must be built. This paper argues that many of the lessons learned in the web engineering area can be used to deal with this problem. Millions of users navigate the World Wide Web. Hypertextual programming leverages this widely available end-user skill to facilitate the construction of computer programs.},
	booktitle = {End-{User} {Development}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Ortiz-Chamorro, Sebastian and Rossi, Gustavo and Schwabe, Daniel},
	editor = {Pipek, Volkmar and Rosson, Mary and Ruyter and Wulf, Volker},
	year = {2009},
	pages = {225--241}
}

@article{hoyer_generic_2009,
	title = {Generic {Business} {Model} {Types} for {Enterprise} {Mashup} {Intermediaries}},
	journal = {Value Creation in E-Business Management},
	author = {Hoyer, V. and Stanoevska-Slabeva, K.},
	year = {2009},
	keywords = {*file-import-10-08-27},
	pages = {1--17}
}

@article{cappiello_information_2010,
	title = {Information {Quality} in {Mashups}},
	journal = {Internet Computing},
	author = {Cappiello, C. and Daniel, F. and Matera, M. and Pautasso, C.},
	year = {2010},
	keywords = {*file-import-10-08-27}
}

@techreport{corporation_concepts:_2003,
	title = {Concepts: {Web} {Architecture} {Patterns}},
	author = {Corporation, Rational S.},
	year = {2003}
}

@incollection{rossi_modeling_2008,
	address = {London},
	series = {Human-{Computer} {Interaction} {Series}},
	title = {Modeling {And} {Implementing} {Web} {Applications} {With} {OOHDM}},
	isbn = {1-84628-922-X 978-1-84628-922-4},
	abstract = {Web Engineering: Modelling and Implementing Web Applications presents the state of the art approaches for obtaining a correct and complete Web software product from conceptual schemas, represented via well-known design notations. Describing mature and consolidated approaches to developing complex applications, this edited volume is divided into three parts and covers the challenges web application developers face; design issues for web applications; and how to measure and evaluate web applications in a consistent way. With contributions from leading researchers in the field this book will appeal to researchers and students as well as to software engineers, software architects and business analysts.},
	booktitle = {Web {Engineering}: {Modelling} and {Implementing} {Web} {Applications}},
	publisher = {Springer},
	author = {Rossi, Gustavo and Schwabe, Daniel},
	editor = {Rossi, Gustavo and Pastor, Oscar and Schwabe, Daniel and Olsina, Luis},
	year = {2008},
	keywords = {oohdm, presentaciones}
}

@book{rossi_web_2008,
	address = {London},
	series = {Human-{Computer} {Interaction} {Series}},
	title = {Web {Engineering}: {Modelling} and {Implementing} {Web} {Applications}},
	isbn = {1-84628-922-X 978-1-84628-922-4},
	abstract = {Web Engineering: Modelling and Implementing Web Applications presents the state of the art approaches for obtaining a correct and complete Web software product from conceptual schemas, represented via well-known design notations. Describing mature and consolidated approaches to developing complex applications, this edited volume is divided into three parts and covers the challenges web application developers face; design issues for web applications; and how to measure and evaluate web applications in a consistent way. With contributions from leading researchers in the field this book will appeal to researchers and students as well as to software engineers, software architects and business analysts.},
	publisher = {Springer},
	editor = {Rossi, Gustavo and Pastor, Oscar and Schwabe, Daniel and Olsina, Luis},
	year = {2008},
	keywords = {design, engineering, hypermedia, methodologies, web}
}

@article{burnett_end-user_2004,
	title = {End-user software engineering},
	volume = {47},
	issn = {0001-0782},
	url = {http://dx.doi.org/10.1145/1015864.1015889},
	doi = {10.1145/1015864.1015889},
	abstract = {End-user programming has become the most common form of programming in use today [2], but there has been little investigation into the dependability of the programs end users create. This is problematic because the dependability of these programs can be very important; in some cases, errors in end-user programs, such as formula errors in spreadsheets, have cost millions of dollars. (For example, see www.theregister.co.uk/content/67/31298.html or panko.cba.hawaii.edu/ssr/Mypapers/whatknow.htm.) We have been investigating ways to address this problem by developing a software engineering paradigm viable for end-user programming, an approach we call end-user software engineering .},
	number = {9},
	journal = {Commun. ACM},
	author = {Burnett, Margaret and Cook, Curtis and Rothermel, Gregg},
	month = sep,
	year = {2004},
	keywords = {in\_res\_library, sw\_natura},
	pages = {53--58}
}

@incollection{burnett_what_2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {What {Is} {End}-{User} {Software} {Engineering} and {Why} {Does} {It} {Matter}?},
	volume = {5435},
	isbn = {978-3-642-00425-4},
	url = {http://dx.doi.org/10.1007/978-3-642-00427-8_2},
	abstract = {End-user programming has become ubiquitous, so much so that there are more end-user programmers today than there are professional programmers. End-user programming empowers—but to do what? Make really bad decisions based on really bad programs? Enter software engineering's focus on quality. Considering software quality is necessary, because there is ample evidence that the programs end users create are filled with expensive errors. In this paper, I consider what happens when we add to end-user programming environments considerations of software quality, going beyond the ” create a program” aspect of end-user programming. I describe a philosophy to software engineering for end users, and then survey several projects in this area. A basic premise is that end-user software engineering can only succeed to the extent that it respects the fact that the user probably has little expertise or even interest in software engineering.},
	booktitle = {End-{User} {Development}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Burnett, Margaret},
	editor = {Pipek, Volkmar and Rosson, Mary B. and Ruyter, Boris and Wulf, Volker},
	month = feb,
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {15--28}
}

@article{conklin_hypertext:_1987,
	title = {Hypertext: {An} {Introduction} and {Survey}},
	volume = {20},
	url = {http://dx.doi.org/10.1109/MC.1987.1663693},
	doi = {10.1109/MC.1987.1663693},
	abstract = {An abstract is not available.},
	number = {9},
	journal = {Computer},
	author = {Conklin, Jeff},
	month = sep,
	year = {1987},
	keywords = {in\_res\_library, sw\_natura},
	pages = {17--41}
}

@inproceedings{finkelstein_software_2000,
	address = {Limerick, Ireland},
	series = {{ICSE} '00},
	title = {Software engineering: a roadmap},
	isbn = {1-58113-253-0},
	url = {http://dx.doi.org/10.1145/336512.336519},
	doi = {10.1145/336512.336519},
	abstract = {An abstract is not available.},
	booktitle = {Proceedings of the {Conference} on {The} {Future} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Finkelstein, Anthony and Kramer, Jeff},
	year = {2000},
	keywords = {in\_res\_library, sw\_natura},
	pages = {3--22}
}

@inproceedings{igarashi_fluid_1998,
	address = {Washington, DC, USA},
	title = {Fluid {Visualization} of {Spreadsheet} {Structures}},
	isbn = {0-8186-8712-6},
	url = {http://portal.acm.org/citation.cfm?id=834481},
	abstract = {Spreadsheets augment a visible tabular layout with invisible formulas. Direct manipulations of the tabular layout may or may not result in the desired changes to the formulas. The user is forced to explore the individual cells to find, verify, and modify the formulas, which causes heavy cognitive overhead. We present a set of techniques that make these formulas and their resulting dataflow structure easily accessible while maintaining the natural appearance of the spreadsheet. Transient local views visualize dataflow structures associated with individual cells, while static global views and animated global explanations visually present the entire dataflow structure at once. Semantic navigation enables the user to navigate through the dataflow structure interactively, and visual editing techniques make it possible to construct formulas using graphical editing techniques. Central to these techniques is the use of animation and lightweight interaction for rapid and non-intrusive visualization. Our prototype implementation suggests that these techniques can greatly improve the expressive power of current spreadsheets as well as other applications that have rich underlying structures.},
	booktitle = {{VL} '98: {Proceedings} of the {IEEE} {Symposium} on {Visual} {Languages}},
	publisher = {IEEE Computer Society},
	author = {Igarashi, Takeo and Mackinlay, Jock D. and Chang, Bay W. and Zellweger, Polle T.},
	year = {1998},
	keywords = {in\_res\_library, sw\_natura},
	pages = {118+}
}

@article{ko_framework_2004,
	title = {A framework and methodology for studying the causes of software errors in programming systems},
	volume = {16},
	issn = {1045926X},
	url = {http://www.sci.brooklyn.cuny.edu/∼kopec/research/sdarticle.pdf},
	doi = {10.1016/j.jvlc.2004.08.003},
	abstract = {An essential aspect of programmers' work is the correctness of their code. This makes current HCI techniques ill-suited to analyze and design the programming systems that programmers use everyday, since these techniques focus more on problems with learnability and efficiency of use, and less on error-proneness. We propose a framework and methodology that focuses specifically on errors by supporting the description and identification of the causes of software errors in terms of chains of cognitive breakdowns. The framework is based on both old and new studies of programming, as well as general research on the mechanisms of human error. Our experiences using the framework and methodology to study the Alice programming system have directly inspired the design of several new programming tools and interfaces. This includes the Whyline debugging interface, which we have shown to reduce debugging time by a factor of 8 and help programmers get 40\% further through their tasks. We discuss the framework's and methodology's implications for programming system design, software engineering, and the psychology of programming.},
	number = {1-2},
	journal = {Journal of Visual Languages \& Computing},
	author = {Ko, Andrew J. and Myers, Brad A.},
	year = {2004},
	keywords = {in\_res\_library, sw\_natura},
	pages = {41--84}
}

@article{ko_state_2009,
	title = {The state of the art in end-user software engineering},
	abstract = {Most programs today are written not by professional software developers, but by people with expertise in other domains working towards goals for which they need computational support. For example, a teacher might write a grading spreadsheet to save time grading, or an interaction designer might use an interface builder to test some user interface design ideas. Although these end-user programmers may not have the same goals as professional developers, they do face many of the same software engineering challenges, including understanding their re-quirements, as well as making decisions about design, reuse, integration, testing, and debugging. This article summarizes and classifies research on these activities, defining the area of End-User Software Engineering (EUSE) and related terminology. The article then discusses empirical research about end-user software engi-neering activities and the technologies designed to support them. The article also addresses several crosscutting issues in the design of EUSE tools, including the roles of risk, reward, and domain complexity, and self-efficacy in the design of EUSE tools and the potential of educating users about software engineering principles.},
	journal = {ACM Computing Surveys (to appear)},
	author = {Ko, A. and Abraham, R. and Beckwith, L. and Blackwell, A. and Burnett, M. and Erwig, M. and Scaffidi, C. and Lawrence, J. and Lieberman, H. and Myers, B. and Rosson, M. B. and Rothermel, G. and Shaw, M. and Wiedenbeck, S.},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura}
}

@book{myers_past_2009,
	title = {The {Past}, {Present} and {Future} of {Programming} in {HCI}},
	url = {http://www.academia.edu/2669908/The_past_present_and_future_of_programming_in_HCI},
	abstract = {The first computer users were all programmers, and the field of Human-Computer Interaction started, in part, with a focus on improving how programming was done. There was a significant amount of work in the 1980's on this topic, but it mostly died out in the 1990s. Now, there is a resurgence of work on what used to be called the Psychology of Programming, Software Psychology, and the Empirical Studies of Programming. Now, research that combines HCI and software engineering concerns regularly wins awards at both the software engineering and HCI conferences, and although there is no longer a conference devoted solely to this topic, it is a major focus of the popular VL/HCC conference series. In this paper, we argue that new HCI and software engineering methods and tools, along with a new acceptance of the programming community, makes it a propitious time for a renewed focus on this topic.},
	author = {Myers, Brad A. and Ko, Andrew J.},
	month = feb,
	year = {2009},
	keywords = {in\_res\_library, sw\_natura}
}

@book{nardi_small_1993,
	title = {A {Small} {Matter} of {Programming}: {Perspectives} on {End} {User} {Computing}},
	isbn = {0-262-14053-5},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262140535},
	abstract = {\textit{A Small Matter of Programming } asks why it has been so difficult for end users to command programming power and explores the problems of end user-driven application development that must be solved to afford end users greater computational power.{\textless}br /{\textgreater} {\textless}br /{\textgreater} Drawing on empirical research on existing end user systems, \textit{A Small Matter of Programming } analyzes cognitive, social, and technical issues of end user programming. In particular, it examines the importance of task-specific programming languages, visual application frameworks, and collaborative work practices for end user computing, with the goal of helping designers and programmers understand and better satisfy the needs of end users who want the capability to create, customize, and extend their applications software.{\textless}br /{\textgreater} {\textless}br /{\textgreater} The ideas in the book are based on the author's research on two successful end user programming systems–spreadsheets and CAD systems–as well as other empirical research. Nardi concentrates on broad issues in end user programming, especially end users' strengths and problems, introducing tools and techniques as they are related to higher-level user issues.},
	publisher = {The MIT Press},
	author = {Nardi, Bonnie A.},
	month = jul,
	year = {1993},
	note = {Published: Hardcover},
	keywords = {in\_res\_library, sw\_natura}
}

@incollection{rode_as_2005,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {As {Easy} as ” {Click}”: {End}-{User} {Web} {Engineering}},
	volume = {3579},
	isbn = {978-3-540-27996-9},
	url = {http://dx.doi.org/10.1007/11531371_61},
	abstract = {We are investigating the feasibility of end-user web engineering. The main target audience for this research is webmasters without programming experience – a group likely to be interested in building web applications. Our target domain is web-based data collection and management applications. As an instrument for studying the mental models of our audience and collecting requirements for an end-user web programming tool, we are developing Click, a proof-of-concept prototype. We discuss end-user related aspects of web engineering in general and describe the design rationale for Click. In particular, we elaborate on the need for supporting evolutionary prototyping and opportunistic and ad hoc development goals. We also discuss strategies for making end-user web engineering scalable and for encouraging end-user developers to continually increase their level of sophistication.},
	booktitle = {Web {Engineering}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Rode, Jochen and Bhardwaj, Yogita and Pérez-Quiñones, Manuel and Rosson, Mary and Howarth, Jonathan},
	editor = {Lowe, David and Gaedke, Martin},
	year = {2005},
	keywords = {in\_res\_library, investigacion, sw\_natura},
	pages = {478--488}
}

@incollection{rode_end_2005,
	title = {End {User} {Development} of {Web} {Applications}},
	url = {http://dx.doi.org/10.1007/1-4020-5386-x_8},
	abstract = {This chapter investigates entry barriers and approaches for facilitating end-user web application development with the particular focus on shaping web programming technology and tools according to end-users' expectations and natural mental models. Our underlying assumption and motivation is that given the right tools and techniques even nonprogrammers may become successfulweb application developers. The main target audience for this research are ” casual”webmasters without programming experience—a group likely to be interested in building web applications. As an important subset of web applications we focus on supporting the development of basic data collection, storage and retrieval applications such as online registrations forms, staff databases, or report tools. Firstwe analyze the factors contributing to the complexity ofweb application development through surveys and interviews of experienced programmers; then we explore the ” natural mental models” of potential end-user web developers, and finally discuss our particular design solutions for lowering entry barriers, as embodied by a proof-of-concept development tool, called Click. Furthermore, we introduce and evaluate the concept of ” Design-at-Runtime”—a new technique for facilitating and accelerating the development-test cycle when building web-based applications. Key words. end user development, web applications},
	booktitle = {End {User} {Development}},
	author = {Rode, Jochen and Rosson, Mary B. and Qui˜nones, Manuel A.},
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {161--182}
}

@book{rossi_web_2007,
	edition = {2008},
	title = {Web {Engineering}: {Modelling} and {Implementing} {Web} {Applications} ({Human}-{Computer} {Interaction} {Series})},
	isbn = {1-84628-922-X},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/184628922X},
	publisher = {Springer},
	author = {Rossi, Gustavo and Pastor, Oscar and Schwabe, Daniel and Olsina, Luis},
	month = oct,
	year = {2007},
	note = {Published: Hardcover},
	keywords = {in\_res\_library, sw\_natura}
}

@article{rosson_design_2008,
	title = {Design {Planning} by {End}-{User} {Web} {Developers}},
	volume = {19},
	url = {http://dx.doi.org/10.1016/j.jvlc.2008.03.001},
	doi = {10.1016/j.jvlc.2008.03.001},
	abstract = {We report an exploratory research project that investigates the impacts of different formsof design planning on end users asked to develop a simple interactive web application.End users created their projects (a Ride Board application) using the CLICK end-user webdevelopment tool [J. Rode, User-centered design of end-user web development tool, Ph.D.Dissertation, Department of Computer Science, Virginia Tech, Blacksburg, VA, USA, 2005].Some participants were asked to create a conceptual map to plan their projects and othersto write user interaction scenarios; a third group was asked to do whatever they founduseful. We describe the planning that each group underwent, how they approached theweb development task, and their reactions to the experience afterwards. The overallpattern of results suggests that while the participants who planned using scenarios feltthey better understood the web development task, it was the group who created conceptmaps that explored and incorporated more of the novel programming features of theCLICK tool. We also discuss the role of gender in the CLICK development task, noting thatwomen were less likely to explore the tool's novel features and perceived themselves asless successful in the task. We conclude with a discussion of design implications andfuture work.},
	number = {4},
	journal = {Journal of Visual Languages and Computing},
	author = {Rosson, M. B. and Sinha, H. and Bhattacharya, M. and Zhao, D.},
	year = {2008},
	keywords = {in\_res\_library, sw\_natura},
	pages = {468--484}
}

@inproceedings{rosson_who_2005,
	address = {Dallas, TX, USA},
	title = {Who, {What}, and {How}: {A} {Survey} of {Informal} and {Professional} {Web} {Developers}},
	isbn = {0-7695-2443-5},
	url = {http://dx.doi.org/10.1109/vlhcc.2005.73},
	doi = {10.1109/vlhcc.2005.73},
	abstract = {We describe a survey of Web developers in which we collected over 300 responses from individuals with widely varying levels of experience and training. This survey continues our studies of informal Web developers, loosely defined as those who develop Web sites but have not been trained as programmers. They are a growing segment of end user programmers, but very little is known about them, and this survey was aimed at helping to characterize this population. In this paper we report on survey questions probing Web development projects, tool use, development process, reuse, and learning and collaboration. Throughout the discussion we compare the responses of developers who self-identify as programmers with those who do not. We use these comparisons as a basis for discussion of tools that might assist nonprogrammers in Web development.},
	booktitle = {2005 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}'05)},
	publisher = {IEEE},
	author = {Rosson, M. B. and Ballin, J. and Rode, J.},
	year = {2005},
	keywords = {in\_res\_library, sw\_natura},
	pages = {199--206}
}

@article{schwabe_object_1998,
	title = {An object oriented approach to web-based applications design},
	volume = {4},
	issn = {1096-9942},
	url = {http://dx.doi.org/10.1002/(sici)1096-9942(1998)4:4%3C207::aid-tapo2%3E3.0.co;2-2},
	doi = {10.1002/(sici)1096-9942(1998)4:4%3C207::aid-tapo2%3E3.0.co;2-2},
	abstract = {In this paper we discuss the use of an object-oriented approach for web-based applications design, based on a method named Object-Oriented Hypermedia Design Method (OOHDM).We first motivate our work discussing the problems encountered while designing large scale, dynamic web-based applications, which combine complex navigation patterns with sophisticated computational behavior. We argue that a method providing systematic guidance to design is needed. Next, we introduce OOHDM, describing its main activities, namely: conceptual design, navigational design, abstract interface design and implementation, and discuss how OOHDM designs can be implemented in the WWW.Finally, related work and future research in this area are further discussed. {\textbackslash}copyright 1998 John Wiley \& Sons, Inc.},
	number = {4},
	journal = {Theory and Practice of Object Systems},
	author = {Schwabe, Daniel and Rossi, Gustavo},
	month = oct,
	year = {1998},
	keywords = {in\_res\_library, sw\_natura},
	pages = {207--225}
}

@inproceedings{schwabe_developing_1998,
	title = {Developing {Hypermedia} {Applications} using {OOHDM}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.140.5775},
	abstract = {In this paper we discuss the use of an object-oriented approach for hypermedia applications design, including web-based, based on the Object Oriented Hypermedia Design Method (OOHDM). We first motivate our work discussing the problems encountered while designing large scale, dynamic web-based applications, which combine complex navigation patterns with sophisticated computational behavior. We argue that a method providing systematic guidance to design is needed. Next, we introduce OOHDM, describing its main activities, namely: conceptual design, navigational design, abstract interface design and implementation, and discuss how OOHDM designs can be implemented in the WWW. Finally, related work and future research in this area are further discussed. 1. A Brief Overview of OOHDM The Object-Oriented Hypermedia Design Method is a model-based approach for building large hypermedia applications. It has been used to design different kinds of applications such as: web sites and information systems,},
	booktitle = {Proceedings of the ninth {ACM} {Conference} on {Hypertext} ({Hypertext} '98), {Pittsburgh}},
	author = {Schwabe, Daniel and Rossi, Gustavo},
	year = {1998},
	keywords = {in\_res\_library, sw\_natura}
}

@techreport{schwabe_navigation_1994,
	address = {Brazil},
	title = {Navigation {Modelling} in {Hypermedia} {Applications}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.2119},
	abstract = {A distinguishing feature of hypermedia applications is the possibility of navigational access by the user. Although this type of access can be an advantage, there many problems associated with it, for example user disorientation ("lost in hyperspace"). This paper presents the concept of navigational context, which is used to design the navigation structure of a hypermedia application. Navigational contexts are defined in the framework of the Object Oriented Hypermedia Design Methodology, which...},
	institution = {Departamento de Informática, PUC-Rio},
	author = {Schwabe, Daniel and Barbosa, Simone D.},
	year = {1994},
	keywords = {in\_res\_library, sw\_natura}
}

@techreport{tassey_economic_2002,
	title = {The {Economic} {Impacts} of {Inadequate} {Infrastructure} for {Software} {Testing}},
	url = {http://www.nist.gov/director/prog-ofc/report02-3.pdf},
	institution = {National Institute of Standards and Technology},
	author = {Tassey, Gregory},
	month = may,
	year = {2002},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{toomim_attaching_2009,
	address = {Boston, MA, USA},
	title = {Attaching {UI} enhancements to websites with end users},
	isbn = {978-1-60558-246-7},
	url = {http://dx.doi.org/10.1145/1518701.1518987},
	doi = {10.1145/1518701.1518987},
	abstract = {We present reform, a step toward write-once apply-anywhere user interface enhancements. The reform system envisions roles for both programmers and end users in enhancing existing websites to support new goals. First, a programmer authors a traditional mashup or browser extension, but they do not write a web scraper. Instead they use reform, which allows novice end users to attach the enhancement to their favorite sites with a scraping by-example interface. reform makes enhancements easier to program while also carrying the benefit that end users can apply the enhancements to any number of new websites. We present reform's architecture, user interface, interactive by-example extraction algorithm for novices, and evaluation, along with five example reform enabled enhancements.},
	booktitle = {{CHI} '09: {Proceedings} of the 27th international conference on {Human} factors in computing systems},
	publisher = {ACM},
	author = {Toomim, Michael and Drucker, Steven M. and Dontcheva, Mira and Rahimi, Ali and Thomson, Blake and Landay, James A.},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {1859--1868}
}

@inproceedings{wallace_assertions_2002,
	address = {Arlington, VA, USA},
	title = {Assertions in end-user software engineering: a think-aloud study},
	volume = {0},
	isbn = {0-7695-1644-0},
	url = {http://dx.doi.org/10.1109/hcc.2002.1046348},
	doi = {10.1109/hcc.2002.1046348},
	abstract = {There has been little research on end-user program development beyond the programming phase. Devising ways to address additional phases may be critical, because research shows that over one-half of the programs written by end users, at least in the widely used spreadsheet paradigm, contain errors. In this paper, we investigate whether providing end users with integrated support for requirement specifications in the form of assertions can help them reason about, recognize, and remove errors in their spreadsheets. Our think-aloud study revealed that end users can indeed use assertions to find and correct errors as they work with their spreadsheets, and also revealed some surprising tendencies and biases about testing.},
	booktitle = {Proceedings {IEEE} 2002 {Symposia} on {Human} {Centric} {Computing} {Languages} and {Environments}},
	publisher = {IEEE Comput. Soc},
	author = {Wallace, C. and Cook, C. and Summet, J. and Burnett, M.},
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {63--65}
}

@inproceedings{wolber_designing_2002,
	address = {San Francisco, California, USA},
	title = {Designing dynamic web pages and persistence in the {WYSIWYG} interface},
	isbn = {1-58113-459-2},
	url = {http://dx.doi.org/10.1145/502716.502770},
	doi = {10.1145/502716.502770},
	abstract = {WebSheets is a programming in the WYSIWYG interface tool for building dynamic web pages that access and modify databases. Without programming, designers can specify not only the presentation of a page, but the dynamic content as well. This capability is facilitated through a novel application of Programming by Example (PBE), Query by Example (QBE), and spreadsheet formulas within the WYSIWYG HTML editor environment.},
	booktitle = {{IUI} '02: {Proceedings} of the 7th international conference on {Intelligent} user interfaces},
	publisher = {ACM},
	author = {Wolber, David and Su, Yingfeng and Chiang, Yih T.},
	year = {2002},
	keywords = {in\_res\_library, sw\_natura},
	pages = {228--229}
}

@inproceedings{anderson_chimera:_2000,
	title = {Chimera: {Hypermedia} for {Heterogeneous} {Software} {Development} {Environments}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.15.6166},
	abstract = {Emerging software development environments are characterized by heterogeneity: they are composed of diverse object stores, user interfaces, and tools. This paper presents an approach for providing hypermedia services in this heterogeneous setting. Central notions of the approach include the following: anchors are established with respect to interactive views of objects, rather than the objects themselves; composable, n-ary links can be established between anchors on different views of objects which may be stored in distinct object bases; viewers may be implemented in different programming languages; and, hypermedia services are provided to multiple, concurrently active, viewers. The paper describes the approach, supporting architecture, and lessons learned. Related work in the areas of supporting heterogeneity and hypermedia data modeling is discussed. The system has been employed in a variety of contexts including research, development, and education.},
	booktitle = {{ACM} {Transactions} on {Information} {Systems}},
	author = {Anderson, Kenneth M. and Taylor, Richard N. and Whitehead, E. James and Jr},
	year = {2000},
	keywords = {in\_res\_library, sw\_natura},
	pages = {211--245}
}

@book{burnett_visual_1999,
	title = {Visual {Programming}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.54.3110},
	abstract = {One of the challenges in visual programming research is scaling up to the support of ever-larger programs. This is a greater issue for VPLs than for traditional textual languages (although it certainly can be said to exist in both) for reasons relating to representation, language design and implementation, and relative youth of the area. For example, some of the visual mechanisms used to achieve characteristics such as explicitness can occupy a great deal of space, making it harder to...},
	author = {Burnett, Margaret M.},
	year = {1999},
	keywords = {in\_res\_library, sw\_natura}
}

@phdthesis{bianchini_modelo_2000,
	title = {Modelo referencial de hipermedio, basado en teoría de grafos, para minimizar el problema de desorientación del usuario},
	abstract = {Un problema que deben enfrentar los diseñadores de hipermedios, especialmente aquellos que desean crear contenidos educativos, es todo lo referente a su organización, los mecanismos de recorrido y exploración que se brindan y evitar que durante el proceso de navegación, el usuario sufra del llamado problema de desorientación. Se ha reportado que muchos estudiantes no tienen la capacidad de escoger el mejor camino al recorrer contenidos instruccionales en un ambiente hipermedio y no puede comprometerse la responsabilidad del diseñador de los materiales para guiar al estudiante. En este trabajo se propone un modelo referencial de hipermedio en el cual se definen todas las operaciones sobre los hiperdocumentos como algoritmos y conceptos formales de la teoría de grafos, con el fin de minimizar el problema de desorientación del usuario en ambientes hipermedios educativos. Este modelo se incorpora a un ambiente de aprendizaje-enseñanza basado en el WWW, que se está desarrollando en la Universidad Simón Bolívar de Caracas.},
	author = {Bianchini, Adelaide},
	month = nov,
	year = {2000},
	keywords = {in\_res\_library, sw\_natura}
}

@article{garg_ishys:_1989,
	title = {{ISHYS}: {Designing} an {Intelligent} {Software} {Hypertext} {System}},
	volume = {4},
	issn = {0885-9000},
	url = {http://dx.doi.org/10.1109/64.43270},
	doi = {10.1109/64.43270},
	abstract = {The authors describe the design of ISHYS, an intelligent software hypertext system, and discuss novel applications that such a system can support. In designing ISHYS, they sought to support the software life cycle from a 'web of computing' framework, which necessarily requires the consideration of sociotechnical factors influencing and influenced by the software life cycle. ISHYS supports functionalities that include influencing work interactions on the basis of social interactions and determining tools and their options on the basis of project status information. Implementation of required enhancements to DIF (documents integration facility), the authors' current software hypertext system, has been completed using Prolog, C, and X Windows.},
	number = {3},
	journal = {IEEE Expert: Intelligent Systems and Their Applications},
	author = {Garg, Pankaj K. and Scacchi, Walt},
	month = sep,
	year = {1989},
	keywords = {in\_res\_library, sw\_natura},
	pages = {52--63}
}

@book{koch_comparative_1999,
	title = {A {Comparative} {Study} of {Methods} for {Hypermedia} {Development}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.9988},
	abstract = {This paper presents a comparative study of the most relevant methodologies for hypermedia and Web development published in the last few years. Most of these methods focus on the design of hypermedia applications; only a few cover more aspects of the life cycle, such as requirements capture, implementation and/or testing. One common characteristic is the separation of the domain analysis from the specification of the navigation space structure as well as from the design of the user interface. A...},
	author = {Koch, N.},
	year = {1999},
	keywords = {in\_res\_library, sw\_natura}
}

@article{merrill_mashups:_2006,
	title = {Mashups: {The} new breed of {Web} app},
	journal = {IBM Web Architecture Technical Library},
	author = {Merrill, D.},
	year = {2006},
	keywords = {in\_res\_library, sw\_natura}
}

@inproceedings{zang_mashups:_2008,
	address = {Florence, Italy},
	series = {{CHI} {EA} '08},
	title = {Mashups: who? what? why?},
	isbn = {978-1-60558-012-8},
	url = {http://dx.doi.org/10.1145/1358628.1358826},
	doi = {10.1145/1358628.1358826},
	abstract = {In recent years major web services have opened their systems to outside use through the implementation of public APIs. As a result, web developers have begun to experiment with mashups - software applications that merge separate APIs and data sources into one integrated interface. Because the APIs and data sources are publicly available, in principle anyone can create a mashup. However, because relatively advanced programming languages are required to integrate these APIs, creating a mashup still requires considerable programming expertise. In this paper we share the results of an exploratory study of web developers and their experiences with building mashups. We profile the characteristics of mashup developers, examine the mashups they create, and the reasons they create mashups. From the results of this initial survey we outline a course for future research.},
	booktitle = {{CHI} '08 extended abstracts on {Human} factors in computing systems},
	publisher = {ACM},
	author = {Zang, Nan and Rosson, Mary B. and Nasser, Vincent},
	year = {2008},
	keywords = {in\_res\_library, sw\_natura},
	pages = {3171--3176}
}

@inproceedings{nuseibeh_requirements_2000,
	address = {Limerick, Ireland},
	series = {{ICSE} '00},
	title = {Requirements engineering: a roadmap},
	isbn = {1-58113-253-0},
	url = {http://dx.doi.org/10.1145/336512.336523},
	doi = {10.1145/336512.336523},
	abstract = {This paper presents an overview of the field of software systems requirements engineering (RE). It describes the main areas of RE practice, and highlights some key open research issues for the future.},
	booktitle = {Proceedings of the {Conference} on {The} {Future} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Nuseibeh, Bashar and Easterbrook, Steve},
	month = may,
	year = {2000},
	keywords = {in\_res\_library, sw\_natura},
	pages = {35--46}
}

@incollection{rossi_web_1999,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Web {Application} {Models} {Are} {More} than {Conceptual} {Models}},
	volume = {1727},
	isbn = {978-3-540-66653-0},
	url = {http://dx.doi.org/10.1007/3-540-48054-4_20},
	abstract = {In this paper we argue that Web applications are a particular kind of hypermedia application and show how to model their navigational structure. We argue that if we need to design applications combining hypermedia navigation with complex transactional behaviors (as in E-commerce systems), we need a systematic development approach. We present the main ideas underlying the Object-Oriented Hypermedia Design Method (OOHDM) and show that Web applications are built as views of conceptual models. We present the abstraction primitives used to design conceptual and navigational structure of Web applications and describe the view definition language. We introduce navigational contexts as the structuring mechanism for the navigational space. Further work on designing Web applications with OOHDM is also presented.},
	booktitle = {Advances in {Conceptual} {Modeling}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Rossi, Gustavo and Schwabe, Daniel and Lyardet, Fernando},
	editor = {Chen, Peter and Embley, David and Kouloumdjian, Jacques and Liddle, Stephen and Roddick, John},
	year = {1999},
	keywords = {in\_res\_library, sw\_natura},
	pages = {239--252}
}

@inproceedings{rosson_designing_1987,
	title = {Designing for designers: an analysis of design practice in the real world},
	url = {http://doi.acm.org/10.1145/29933.30873},
	abstract = {Twenty-two designers were interviewed about their design of interactive systems. They were asked to select a recent project having a significant user interface component, and were probed about the general design process involved, how the design of the user interface fit into that process, and their personal strategies for exploring ideas. Analysis of their responses pointed to two models of the design process. The relationship of these models to the type of user testing done and the strategies used for generating ideas is discussed, especially with respect to the implications for developing tools to support design.},
	booktitle = {Proceedings of the {SIGCHI}/{GI} conference on {Human} factors in computing systems and graphics interface},
	publisher = {ACM Press},
	author = {Rosson, Mary B. and Maass, Susanne and Kellogg, Wendy A.},
	year = {1987},
	keywords = {in\_res\_library, sw\_natura},
	pages = {137--142}
}

@article{kelleher_lowering_2003,
	title = {Lowering the {Barriers} to {Programming}: a survey of programming environments and languages for novice programmers},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.66.6698},
	abstract = {Since the early 1960's, researchers have built a number of programming languages and environments with the intention of making programming accessible to a larger number of people. This paper presents a taxonomy of languages and environments designed to make programming more accessible to novice programmers of all ages. The systems are organized by their primary goal, either to teach programming or to use programming to empower their users, and then by the authors' approach to making learning to program easier for novice programmers. The paper explains all categories in the taxonomy, provides a brief description of the systems in each category, and suggests some avenues for future work in novice programming environments and languages.},
	author = {Kelleher, Caitlin and Pausch, Randy},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura}
}

@article{virzi_refining_1992,
	title = {Refining the {Test} {Phase} of {Usability} {Evaluation}: {How} {Many} {Subjects} {Is} {Enough}?},
	issn = {0018-7208},
	url = {http://www.ingentaconnect.com/content/hfes/hf/1992/00000034/00000004/art00007},
	abstract = {Attention has been given to making user interface design and testing less costly so that it might be more easily incorporated into the product development life cycle. Three experiments are reported in this paper that relate the proportion of usability problems identified in an evaluation to the number of subjects participating in that study. The basic findings are that (a) 80\% of the usability problems are detected with four or five subjects, (b) additional subjects are less and less likely to reveal new information, and (c) the most severe usability problems are likely to have been detected in the first few subjects. Ramifications for the practice of human factors are discussed as they relate to the type of usability test cycle employed and the goals of the usability test.},
	journal = {Human Factors: The Journal of the Human Factors and Ergonomics Society},
	author = {Virzi, Robert A.},
	year = {1992},
	keywords = {in\_res\_library, sw\_natura},
	pages = {457--468}
}

@book{cypher_watch_1993,
	address = {Cambridge, MA, USA},
	title = {Watch what {I} do: programming by demonstration},
	isbn = {0-262-03213-9},
	url = {http://portal.acm.org/citation.cfm?id=168080},
	abstract = {An abstract is not available.},
	publisher = {MIT Press},
	editor = {Cypher, Allen and Halbert, Daniel C. and Kurlander, David and Lieberman, Henry and Maulsby, David and Myers, Brad A. and Turransky, Alan},
	year = {1993},
	keywords = {in\_res\_library, sw\_natura}
}

@book{eco_como_2001,
	title = {Cómo se hace una tesis},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/8474328969},
	publisher = {Gedisa},
	author = {Eco, Umberto},
	month = sep,
	year = {2001},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{brittain_tomcat:_2007,
	edition = {Second Edition},
	title = {Tomcat: {The} {Definitive} {Guide}},
	isbn = {0-596-10106-6},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0596101066},
	publisher = {O'Reilly Media},
	author = {Brittain, Jason and Darwin, Ian F.},
	month = oct,
	year = {2007},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@incollection{fischer_end-user_2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {End-{User} {Development} and {Meta}-design: {Foundations} for {Cultures} of {Participation}},
	volume = {5435},
	isbn = {978-3-642-00425-4},
	url = {http://dx.doi.org/10.1007/978-3-642-00427-8_1},
	abstract = {The first decade of the World Wide Web predominantly enforced a clear separation between designers and consumers. New technological developments, such as the cyberinfrastructure and Web 2.0 architectures, have emerged to support a participatory Web. These developments are the foundations for a fundamental shift from a consumer culture (specialized in producing finished goods to be consumed passively) to a culture of participation (in which all people are provided with the means to participate actively in personally meaningful activities). End-user development and meta-design provide foundations for this fundamental transformation. They explore and support new approaches for the design, adoption, appropriation, adaptation, evolution, and sharing of artifacts by all participating stakeholders. They take into account that cultures of participation are not dictated by technology alone: they are the result of incremental shifts in human behavior and social organizations.},
	booktitle = {End-{User} {Development}},
	publisher = {Springer Berlin / Heidelberg},
	author = {Fischer, Gerhard},
	editor = {Pipek, Volkmar and Rosson, Mary and de Ruyter, Boris and Wulf, Volker},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {3--14}
}

@inproceedings{wilson_harnessing_2003,
	title = {Harnessing curiosity to increase correctness in end-user programming},
	isbn = {1-58113-630-7},
	url = {http://dx.doi.org/10.1145/642611.642665},
	doi = {10.1145/642611.642665},
	abstract = {Despite their ability to help with program correctness, assertions have been notoriously unpopular—even with professional programmers. End-user programmers seem even less likely to appreciate the value of assertions; yet end-user programs suffer from serious correctness problems that assertions could help detect. This leads to the following question: can end users be enticed to enter assertions? To investigate this question, we have devised a curiosity-centered approach to eliciting assertions from end users, built on a surprise-explain-reward strategy. Our follow-up work with end-user participants shows that the approach is effective in encouraging end users to enter assertions that help them find errors.},
	booktitle = {{CHI} '03: {Proceedings} of the conference on {Human} factors in computing systems},
	publisher = {ACM Press},
	author = {Wilson, Aaron and Burnett, Margaret and Beckwith, Laura and Granatir, Orion and Casburn, Ledah and Cook, Curtis and Durham, Mike and Rothermel, Gregg},
	year = {2003},
	keywords = {in\_res\_library, sw\_natura},
	pages = {305--312}
}

@incollection{scaffidi_reuse_2010,
	title = {Reuse in the world of end-user programmers},
	isbn = {978-0-12-381542-2},
	url = {http://repository.cmu.edu/isr/142/},
	abstract = {End-user programmers often reuse one another's code when creating new programs, but this reuse is rarely as clean or simple as the blackbox reuse that professional programmers aspire to achieve. In this chapter, we explore the motivations that drive reuse of end-user code, the challenges that impede reuse of end- user code, and several approaches that facilitate reuse of end-user code. We give particular emphasis to the problem of helping end-users to identify high-quality reusable code amid the millions of scripts, macros, spreadsheets, and other programs produced by essentially anonymous users out on the web. Based on a review of empirical studies, we find that reusable code is often characterized by certain traits, suggesting that it might be possible to help end-user programmers to find reusable code by automatically gathering, analyzing, and synthesizing information about whether code has these desirable traits. We close the chapter with a discussion of future research opportunities aimed at helping end users to identify, understand, and adapt reusable code.},
	booktitle = {No {Code} {Required}: {Giving} {Users} {Tools} to {Transform} the {Web}},
	publisher = {Elsevier Science},
	author = {Scaffidi, Christopher and Shaw, Mary},
	month = may,
	year = {2010},
	keywords = {in\_res\_library, sw\_natura}
}

@article{clarke_what_2007,
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {What is an {End} {User} {Software} {Engineer}?},
	issn = {1862-4405},
	abstract = {The group of people described as end user software engineers are a very large and diverse group. For example, research scientists building simulations of complex processes are described as end user software engineers as are school teachers who create spreadsheets to track the progress of their students. Given the difference in background and domains in which different end user software engineers work, I argue that it is important to distinguish between different categories of end user software engineers. Such distinctions will enable us to determine which tools and techniques are appropriate for which types of end user software engineers. Indeed, such distinctions will also make clear the differences and similarities between end user software engineers and so called professional software engineers.},
	number = {07081},
	journal = {End-User Software Engineering},
	author = {Clarke, Steven},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	year = {2007},
	keywords = {in\_res\_library, sw\_natura}
}

@book{elbaum_dependability_nodate,
	address = {Dagstuhl, Germany},
	series = {Dagstuhl {Seminar} {Proceedings}},
	title = {Dependability in {Web} {Software}},
	abstract = {The web is an increasingly important platform used for a wide variety of tasks on a regular basis. And as the web becomes more important, the ways in which it is used grows increasingly sophisticated. End users build web pages and applications, use web applications in new and unexpected ways and use web macro tools to automate web-based tasks. All of these tasks are error-prone. In addition, they often depend on external components outside of the control of the developer or end user. Therefore we have been developing tools and methodologies to assist users with these},
	number = {07081},
	publisher = {Internationales Begegnungs- und Forschungszentrum für Informatik (IBFI), Schloss Dagstuhl, Germany},
	author = {Elbaum, Sebastian and Fisher, Marc and Rothermel, Gregg},
	editor = {Burnett, Margaret H. and Engels, Gregor and Myers, Brad A. and Rothermel, Gregg},
	keywords = {in\_res\_library, sw\_natura}
}

@article{ko_automating_2009,
	title = {Automating the {Web} with {CoScripter}: {An} {Interview} with {Tessa} {Lau}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.122},
	doi = {10.1109/ms.2009.122},
	abstract = {The future of computer use is undeniably on the Web. People bank, store documents, do research, and even make and maintain friendships online. With this explosion of Web-based content and applications has come a proliferation of tools to streamline and automate people's interactions on the Web, leading many users to write Web scripts to simplify their work. With CoScripter, users can automate Web activities through scripting and share scripts with others.},
	number = {5},
	journal = {Software, IEEE},
	author = {Ko, Andrew J.},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {52--53}
}

@article{dorner_end_2009,
	title = {End {Users} at the {Bazaar}: {Designing} {Next}-{Generation} {Enterprise} {Resource} {Planning} {Systems}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.127},
	doi = {10.1109/ms.2009.127},
	abstract = {Studying changing software architectures from an end-user development perspective inspires an enterprise resource planning architecture that lets end users create their own solutions.The "bazaar," a notion Eric Raymond coined, is a well-known metaphor for a software engineering model that developers often use in open source projects. In this model, software development is in view of the public, which means that anyone has access to the source code and can change, improve, test, and use it. Open source projects such as Firefox or the ADempiere ERP Business Suite have produced high-quality results, indicating that bazaar-like software engineering models are effective.},
	number = {5},
	journal = {Software, IEEE},
	author = {Dörner, Christian and Draxler, Sebastian and Pipek, Volkmar and Wulf, Volker},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {45--51}
}

@article{fischer_metadesign:_2009,
	title = {Metadesign: {Guidelines} for {Supporting} {Domain} {Experts} in {Software} {Development}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.134},
	doi = {10.1109/ms.2009.134},
	abstract = {Our collaborative research activities in software development (at the University of Colorado's Center for Lifelong Learning and Design, the University of Tokyo, and Software Research Associates) have focused on understanding the implications of the quickly disappearing distinction between users and developers. We've also concentrated on establishing new software development methodologies by viewing software systems as continuously evolving sociotechnical systems driven by design activities of both professional software engineers and users. We believe that domain experts, as the owners of problems, need to be in charge of developing the software they require. Toward that end, we've created the metadesign framework, which reformulates software development activities as a continuum of different degrees of design and use. In addition, on the basis of our research and our findings in the research literature, we've developed a set of guidelines for supporting domain experts in software development.},
	number = {5},
	journal = {Software, IEEE},
	author = {Fischer, Gerhard and Nakakoji, Kumiyo and Ye, Yunwen},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {37--44}
}

@article{brandt_writing_2009,
	title = {Writing {Code} to {Prototype}, {Ideate}, and {Discover}},
	volume = {26},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/ms.2009.147},
	doi = {10.1109/ms.2009.147},
	abstract = {People often write code to prototype, ideate, and discover. To do this, they work opportunistically, emphasizing speed and ease of development over code robustness and maintainability. Quickly hacking a program together can provide both practical and learning benefits for novices and experts: professional programmers and designers prototype to explore and communicate ideas, scientists program laboratory instruments, and entrepreneurs assemble complex spreadsheets to better understand their business. Their diverse activities share an emphasis on speed and ease of development over robustness and maintainability.},
	number = {5},
	journal = {Software, IEEE},
	author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Klemmer, Scott R.},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {18--24}
}

@book{jalote_concise_2008,
	edition = {1},
	title = {A {Concise} {Introduction} to {Software} {Engineering} ({Undergraduate} {Topics} in {Computer} {Science})},
	isbn = {1-84800-301-3},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1848003013},
	abstract = {Software engineering is an integral part of studies in computer science and consequently foundational knowledge is critical to all students in the field. This text focuses on the essential elements, providing readers with the basic skills and introductory knowledge required to execute a software project successfully. Following the winning formula and easy-to read style of the author's previous \_An Integrated Approach to Software Engineering\_, this reader-friendly text is written specifically for undergraduates as an introduction to this broad- ranging discipline. With a strong emphasis on practice, this textbook takes a step-by-step approach whereby the key tasks involved in a project are discussed through the course of the book, illustrating the different activities involved in software development. **Features and topics:** • Discusses core concepts and techniques in an introductory easy-to-follow approach • Offers a solid foundation to this wide-ranging topic • Focuses only on the essential elements required to complete a software project effectively • Takes the reader through the project life cycle - applying concepts to practice • Teaches the skills needed to execute a small commercial project • Provides the necessary conceptual background for further study in software engineering • Concentrates on the two key tasks: Engineering and project management • Each chapter covers one of the key tasks involved in a project • Includes helpful learning tools such as chapter introductions, chapter goals and self-assessment exercises • Teaching support (such as chapter slides, templates and a case study) and supplemental resources are available via http://www.cse.iitd.ac.in/∼jalote/ConciseIntroToSE • Presents practical methods and notations for performing given tasks within each chapter Designed for undergraduates and bolstered with numerous examples, this text imparts to the reader the fundamental knowledge, skills, practices and techniques within software engineering. It will also be helpful for professionals who know programming but want to be introduced to the formal systematic approach of software engineering.},
	publisher = {Springer},
	author = {Jalote, Pankaj},
	month = sep,
	year = {2008},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{wang_software_2007,
	edition = {1},
	title = {Software {Engineering} {Foundations}: {A} {Software} {Science} {Perspective}},
	isbn = {0-8493-1931-5},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0849319315},
	abstract = {To deal with the difficulties inherent in large-scale software development, the foundations of software engineering are yet to be explored. This comprehensive text is the first book to cover the theoretical and empirical foundations of software engineering. It provides a framework of software engineering methodologies and covers a wide range of foundations such as philosophy, informatics, and engineering economics. Self-contained and requiring only basic programming experience, this book is filled with in-depth comments, annotated references, real-world problems and heuristic questions. Software Engineering Foundations is an important book for software engineers and students alike.},
	publisher = {AUERBACH / CRC Press},
	author = {Wang, Yingxu},
	month = jul,
	year = {2007},
	note = {Published: Hardcover},
	keywords = {in\_res\_library, sw\_natura}
}

@book{zhu_software_2005,
	title = {Software {Design} {Methodology}: {From} {Principles} to {Architectural} {Styles}},
	isbn = {0-7506-6075-9},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0750660759},
	publisher = {Butterworth-Heinemann},
	author = {Zhu, Hong},
	month = jun,
	year = {2005},
	note = {Published: Paperback},
	keywords = {in\_res\_library, sw\_natura}
}

@book{neale_preparing_2006,
	series = {Pathfinder {International} tool series: {Monitoring} and evaluation},
	title = {Preparing a {Case} {Study}: {A} {Guide} for {Designing} and {Conducting} a {Case} {Study} for {Evaluation} {Input} {Volume} 1 of {Pathfinder} {International} tool series: {Monitoring} and evaluation},
	url = {http://books.google.com.py/books/about/Preparing_a_Case_Study.html?id=jW6uNwAACAAJ&#38;redir_esc=y},
	publisher = {Pathfinder International},
	author = {Neale, Palena and Thapa, Shyam and Boyce, Carolyn},
	year = {2006},
	keywords = {in\_res\_library, sw\_natura}
}

@article{runeson_guidelines_2009,
	title = {Guidelines for conducting and reporting case study research in software engineering},
	volume = {14},
	issn = {1382-3256},
	url = {http://dx.doi.org/10.1007/s10664-008-9102-8},
	doi = {10.1007/s10664-008-9102-8},
	abstract = {Case study is a suitable research methodology for software engineering research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims at providing an introduction to case study methodology and guidelines for researchers conducting case studies and readers studying reports of such studies. The content is based on the authors' own experience from conducting and reading case studies. The terminology and guidelines are compiled from different methodology handbooks in other research domains, in particular social science and information systems, and adapted to the needs in software engineering. We present recommended practices for software engineering case studies as well as empirically derived and evaluated checklists for researchers and readers of case study research.},
	number = {2},
	journal = {Empirical Software Engineering},
	author = {Runeson, Per and Höst, Martin},
	year = {2009},
	keywords = {in\_res\_library, sw\_natura},
	pages = {131--164}
}

@article{seaman_qualitative_1999,
	title = {Qualitative methods in empirical studies of software engineering},
	volume = {25},
	url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=799955},
	abstract = {While empirical studies in software engineering are beginning to gain recognition in the research community, this subarea is also entering a new level of maturity by beginning to address the human aspects of software development. This added focus has added a new layer of complexity to an already challenging area of research. Along with new research questions, new research methods are needed to study nontechnical aspects of software engineering. In many other disciplines, qualitative research methods have been developed and are commonly used to handle the complexity of issues involving human behaviour. The paper presents several qualitative methods for data collection and analysis and describes them in terms of how they might be incorporated into empirical studies of software engineering, in particular how they might be combined with quantitative methods. To illustrate this use of qualitative methods, examples from real software engineering studies are used throughout},
	number = {4},
	journal = {Software Engineering, IEEE Transactions on},
	author = {Seaman, Carolyn B.},
	year = {1999},
	keywords = {in\_res\_library, sw\_natura},
	pages = {557--572}
}

@article{myers_strategic_1996,
	title = {Strategic directions in human-computer interaction},
	volume = {28},
	issn = {03600300},
	url = {http://dx.doi.org/10.1145/242223.246855},
	doi = {10.1145/242223.246855},
	number = {4},
	journal = {ACM Computing Surveys},
	author = {Myers, Brad and Ioannidis, Yannis and Hollan, Jim and Cruz, Isabel and Bryson, Steve and Bulterman, Dick and Catarci, Tiziana and Citrin, Wayne and Glinert, Ephraim and Grudin, Jonathan},
	year = {1996},
	keywords = {encontrado, in\_res\_library, sw\_natura},
	pages = {794--809}
}

@article{fischer_meta-design:_2004,
	title = {Meta-design: a manifesto for end-user development},
	volume = {47},
	issn = {0001-0782},
	url = {http://dx.doi.org/10.1145/1015864.1015884},
	doi = {10.1145/1015864.1015884},
	abstract = {End-user development (EUD) activities range from customization to component configuration and programming. Office software, such as the ubiquitous spreadsheet, provides customization facilities, while the growth of the Web has added impetus to end-user scripting for interactive functions in Web sites. In scientific and engineering domains, end users frequently develop complex systems with standard programming languages such as C++ and Java. However, only a minority of users adapt commercial off-the-shelf (COTS) software products. Indeed, composing systems from reusable components, such as enterprise resource planing (ERP) systems, defeats most end users who resort to expensive and scarce expert developers for implementation.},
	number = {9},
	journal = {Commun. ACM},
	author = {Fischer, G. and Giaccardi, E. and Ye, Y. and Sutcliffe, A. G. and Mehandjiev, N.},
	month = sep,
	year = {2004},
	keywords = {encontrado, in\_res\_library, sw\_natura},
	pages = {33--37}
}

@book{robson_real_2011,
	address = {Chichester},
	edition = {3. ed},
	title = {Real world research: a resource for users of social research methods in applied settings},
	isbn = {978-1-4051-8240-9 978-1-4051-8241-6},
	shorttitle = {Real world research},
	abstract = {"This bestselling text on carrying out research in 'real world' situations has been thoroughly revised and updated but continues to have the same authoritative voice and definitive content that has made it such an essential book for teachers and students conducting research within the social sciences"--},
	language = {eng},
	publisher = {Wiley},
	author = {Robson, Colin},
	year = {2011},
	note = {OCLC: 729956086},
	keywords = {Forschung, Methodologie, Psychologie, Psychology, Psychology Research Methodology, Research Methodology, Social sciences, Social sciences Research Methodology, Sozialwissenschaften},
	annote = {Literaturverz. S. [535] - 572},
	file = {Table of Contents PDF:/Users/owner/Library/Application Support/Zotero/Profiles/hdcbvw2g.default/zotero/storage/J985IQB7/Robson - 2011 - Real world research a resource for users of socia.pdf:application/pdf}
}

@incollection{fischer_meta-design:_2006,
	address = {Dordrecht},
	series = {Human-{Computer} {Interaction} {Series}},
	title = {Meta-design: {A} {Framework} for the {Future} of {End}-{User} {Development}},
	volume = {9},
	isbn = {978-1-4020-4220-1},
	url = {http://dx.doi.org/10.1007/1-4020-5386-x_19},
	abstract = {In a world that is not predictable, improvisation, evolution, and innovation are more than a luxury: they are a necessity. The challenge of design is not a matter of getting rid of the emergent, but rather of including it and making it an opportunity for more creative and more adequate solutions to problems. Meta-design is an emerging conceptual framework aimed at defining and creating social and technical infrastructures in which new forms of collaborative design can take place. It extends the traditional notion of system design beyond the original development of a system to include a coadaptive process between users and a system, inwhich the users become co-developers or co-designers. It is grounded in the basic assumption that future uses and problems cannot be completely anticipated at design time, when a system is developed. Users, at use time, will discover mismatches between their needs and the support that an existing system can provide for them. These mismatches will lead to breakdowns that serve as potential sources of new insights, new knowledge, and new understanding. This chapter is structured in four parts: conceptual framework, environments, applications, and findings and challenges. Along the structure of the chapter, we discuss and explore the following essential components of meta-design, providing requirements, guidelines, and models for the future of end-user development: (1) the relationship of meta-design to other design methodologies; (2) the Seeding, Evolutionary Growth, Reseeding Model, a process model for large evolving design artifacts; (3) the characteristics of unself-conscious cultures of design, their strengths and their weaknesses, and the necessity for owners of problems to be empowered to engage in end-user development; (4) the possibilities created by meta-design to bring co-creation alive; and (5) the need for an integrated design space that brings together a technical infrastructure that is evolvable, for the design of learning environments and work organizations that allow end-users to become active contributors, and for the design of relational settings in which users can relate, find motivations and rewards, and accumulate social capital. Key words. co-creation, design for change, design space, design time, domain-oriented design environments, Envisionment and Discovery Collaboratory, interactive art, open systems, SER model, social capital, underdesign, unself-conscious cultures of design, use time, value-feelings.},
	booktitle = {End {User} {Development}},
	publisher = {Springer Netherlands},
	author = {Fischer, Gerhard and Giaccardi, Elisa},
	editor = {Lieberman, Henry and Paternò, Fabio and Wulf, Volker},
	year = {2006},
	keywords = {encontrado, in\_res\_library, sw\_natura},
	pages = {427--457}
}

@article{bannon_reimagining_2011,
	title = {Reimagining {HCI}: toward a more human-centered perspective},
	volume = {18},
	issn = {1072-5520},
	url = {http://dx.doi.org/10.1145/1978822.1978833},
	doi = {10.1145/1978822.1978833},
	abstract = {An abstract is not available.},
	number = {4},
	journal = {interactions},
	author = {Bannon, Liam},
	month = jul,
	year = {2011},
	keywords = {encontrado, in\_res\_library, sw\_natura},
	pages = {50--57}
}

@incollection{lew_human-computer_2007,
	title = {Human-{Computer} {Intelligent} {Interaction}: {A} {Survey}},
	url = {http://dx.doi.org/10.1007/978-3-540-75773-3_1},
	abstract = {Human-computer interaction (HCI) is one of the foremost challenges of our society. New paradigms for interacting with computers are being developed which will define the 21st century and enable the world to communicate and interact effortlessly and intuitively. In this short survey, we explain the major research clusters comprising the state of the art, and indicate promising future research directions.},
	booktitle = {Human–{Computer} {Interaction}},
	author = {Lew, Michael and Bakker, Erwin and Sebe, Nicu and Huang, Thomas},
	year = {2007},
	keywords = {encontrado, in\_res\_library, sw\_natura},
	pages = {1--5}
}

@techreport{pane_usability_1996,
	title = {Usability {Issues} in the {Design} of {Novice} {Programming} {Systems}},
	url = {http://www.cs.cmu.edu/∼pane/cmu-cs-96-132.html},
	abstract = {This report reviews and organizes research about novice programmers. Over the past two decades, many aspects of novice programming have been investigated, resulting in the discovery of important facts and tradeoffs about what makes programming difficult to learn, and about the effectiveness of existing languages, environments, and methods of instruction. However, because this research is dispersed throughout the literature, it is difficult for designers of new programming systems to consider all of the issues collectively. The result is that most new systems are built primarily around technical objectives, perhaps considering only a subset of the usability issues summarized here. In addition to providing a checklist of issues that should be considered in the design of future systems, this report can be used to help researchers identify fruitful topics of future novice programming research.},
	institution = {Carnegie Mellon University},
	author = {Pane, J. F. and Myers, B. A.},
	year = {1996},
	pages = {1--85}
}

@inproceedings{fischer_overview_2009,
	series = {{LNI}},
	title = {An {Overview} of {Current} {Approaches} to {Mashup} {Generation}},
	volume = {145},
	booktitle = {Fifth {Conference} {Professional} {Knowledge} {Management}: {Experiences} and {Visions}, {March} 25-27, 2009 in {Solothurn}, {Switzerland}},
	publisher = {GI},
	author = {Fischer, Thomas and Bakalov, Fedor and Nauerz, Andreas},
	editor = {Hinkelmann, Knut and Wache, Holger},
	year = {2009},
	pages = {254--259}
}

@article{jedlitschka_reporting_nodate,
	title = {Reporting {Experiments} in {Software} {Engineering}},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.106.1784},
	abstract = {One major problem for integrating study results into a common body of knowledge is the heterogeneity of reporting styles: (1) It is difficult to locate relevant information and (2) important information is often missing. Reporting guidelines are expected to support a systematic, standardized presentation of empirical research, thus improving reporting in order to support readers in (1) finding the information they are looking for, (2) understanding how an experiment is conducted, and (3) assessing the validity of its results. The objective of this paper is to present a unified standard for reporting experiments in software engineering. The reporting guidelines are based on (1) a survey of the most prominent published proposals for reporting guidelines in software engineering and (2) an iterative development incorporating feedback from parts of the research community. The guidelines provide detailed guidance on the expected content of the sections and subsections for reporting a specific type of empirical studies, i.e., experiments (controlled experiments and quasi-experiments). 1.},
	author = {Jedlitschka, Andreas and Ciolkowski, Marcus}
}

@article{whitley_visual_1996,
	title = {Visual {Programming} {Languages} and the {Empirical} {Evidence} {For} and {Against}},
	volume = {8},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.8423},
	abstract = {The past decade has witnessed the emergence of an active visual programming research community.Yet, there has also been a noteworthy shortage of empirical evidence supporting the resulting research. This paper summarizes empirical data relevant to visual programming languages, both to show the current empirical status and to act as a call to arms for further empirical work.},
	journal = {Journal of Visual Languages and Computing},
	author = {Whitley, K. N.},
	year = {1996},
	keywords = {propuesta},
	pages = {109--142}
}

@unpublished{acevedo_desarrollo_2010,
	title = {Desarrollo de una {Herramienta} de {Programación} {Hipertextual} para un {Lenguaje} de {Dominio} {Específico}: {EMML}},
	author = {Acevedo, C.},
	year = {2010},
	keywords = {propuesta}
}

@unpublished{zarza_desarrollo_2010,
	title = {Desarrollo de una {Herramienta} de {Programación} {Hipertextual} para un {Lenguaje} de {Dominio} {Específico}},
	author = {Zarza, J. L.},
	year = {2010},
	keywords = {propuesta}
}

@article{pandey_is_1993,
	title = {Is {It} {Easier} to {Write} {Matrix} {Manipulation} {Programs} {Visually} or {Textually}? {An} {Empirical} {Study}},
	journal = {1993 IEEE Symposium on Visual Languages},
	author = {Pandey, R. K. and Burnett, M. M.},
	year = {1993},
	keywords = {propuesta},
	pages = {344--351}
}

@incollection{burnett_visual_2001,
	address = {Hoboken, NJ, USA},
	title = {Visual {Programming}},
	isbn = {0-471-34608-X},
	url = {http://dx.doi.org/10.1002/047134608x.w1707},
	booktitle = {Wiley {Encyclopedia} of {Electrical} and {Electronics} {Engineering}},
	publisher = {John Wiley \& Sons, Inc.},
	author = {Burnett, Margaret M.},
	editor = {Webster, John G.},
	year = {2001},
	keywords = {propuesta}
}

@incollection{day_alternative_1988,
	title = {Alternative representations},
	volume = {22},
	isbn = {978-0-12-543322-8},
	booktitle = {The {Psychology} of {Learning} and {Motivation}: {Advances} in {Research} and {Theory}},
	publisher = {Academic Press},
	author = {Day, Ruth S.},
	editor = {Bower, Gordon H.},
	year = {1988},
	keywords = {propuesta},
	pages = {261--305}
}

@article{scanlan_structured_1989,
	title = {Structured flowcharts outperform pseudocode: an experimental comparison},
	volume = {6},
	issn = {0740-7459},
	url = {http://dx.doi.org/10.1109/52.35587},
	doi = {10.1109/52.35587},
	abstract = {The author discovered, while teaching a course on data structures, that his students overwhelmingly preferred structured flowcharts over pseudocode for comprehending the algorithms presented. He describes an experiment that he designed to find out if real differences in comprehension exist between structured flowcharts and pseudocode when used to describe conditional logic. He hypothesized that structured flowcharts (1) take less time to comprehend, (2) produce fewer errors in understanding, (3) give students more confidence in their understanding of an algorithm, (4) reduce the time spent answering questions about an algorithm, and (5) reduce the number of times students need to look at an algorithm. These hypotheses were tested on three algorithms of varying complexity. The results strongly indicate that structured flowcharts do indeed aid algorithm comprehension. A large difference was found even for the simplest algorithm.{\textgreater}},
	number = {5},
	journal = {Software, IEEE},
	author = {Scanlan, D. A.},
	year = {1989},
	keywords = {propuesta},
	pages = {28--36}
}

@book{elmasri_fundamentals_2007,
	edition = {5},
	title = {Fundamentals of {Database} {Systems}},
	isbn = {0-13-608620-9},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0136086209},
	publisher = {Addison-Wesley},
	author = {Elmasri, R. and Navathe, S.},
	year = {2007},
	note = {Published: Paperback}
}

@article{yu_understanding_2008,
	title = {Understanding {Mashup} {Development}},
	volume = {12},
	issn = {1089-7801},
	url = {http://dx.doi.org/10.1109/mic.2008.114},
	doi = {10.1109/mic.2008.114},
	abstract = {Web mashups are Web applications developed using contents and services available online. Despite rapidly increasing interest in mashups, comprehensive development tools and frameworks are lacking, and in most cases mashing up a new application implies a significant manual programming effort. This article overviews current tools, frameworks, and trends that aim to facilitate mashup development. The authors use a set of characteristic dimensions to highlight the strengths and weaknesses of some representative approaches.},
	number = {5},
	journal = {Internet Computing, IEEE},
	author = {Yu, Jin and Benatallah, Boualem and Casati, Fabio and Daniel, Florian},
	month = sep,
	year = {2008},
	pages = {44--52}
}

@book{nielsen_designing_1999,
	edition = {1},
	title = {Designing {Web} {Usability}},
	isbn = {1-56205-810-X},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/156205810X},
	abstract = {Creating Web sites is easy. Creating sites that truly meet the needs and expectations of the wide range of online users is quite another story. In {\textless}I{\textgreater}Designing Web Usability: The Practice of Simplicity,{\textless}/I{\textgreater} renowned Web usability guru Jakob Nielsen shares his insightful thoughts on the subject. Packed with annotated examples of actual Web sites, this book sets out many of the design precepts all Web developers should follow.{\textless}p{\textgreater} This guide segments discussions of Web usability into page, content, site, and intranet design. This breakdown skillfully isolates for the reader many subtly different challenges that are often mixed together in other discussions. For example, Nielsen addresses the requirements of viewing pages on varying monitor sizes separately from writing concise text for "scanability." Along the way, the author pulls no punches with his opinions, using phrases like "frames: just say no" to immediately make his feelings known. Fortunately, his advise is some of the best you'll find.{\textless}p{\textgreater} One of the unique aspects of this title is the use of actual statistics to buttress the author's opinions on various techniques and technologies. He includes survey results on sizes of screens, types of queries submitted to search portals, response times by connection type and more. This book is intended as the first of two volumes–focusing on the "what." The author promises a follow-up title that will show the "hows" and, based on this installation, we can't wait. {\textless}I{\textgreater}–Stephen W. Plain{\textless}/I{\textgreater}{\textless}p{\textgreater} {\textless}B{\textgreater}Topics covered:{\textless}/B{\textgreater} Cross-platform design, response time considerations, writing for the Web, multimedia implementation, navigation strategies, search boxes, corporate intranet design, accessibility for disabled users, international considerations, and future predictions. {\textless}P{\textgreater}Users experience the usability of a web site before they have committed to using it and before making any purchase decisions. The web is the ultimate environment for empowerment, and he or she who clicks the mouse decides everything. \textit{Designing Web Usability} is the definitive guide to usability from Jakob Nielsen, the world's leading authority. Over 250,000 Internet professionals around the world have turned to this landmark book, in which Nielsen shares the full weight of his wisdom and experience. From content and page design to designing for ease of navigation and users with disabilities, he delivers complete direction on how to connect with any web user, in any situation. Nielsen has arrived at a series of principles that work in support of his findings: 1. That web users want to find what they're after quickly; 2. If they don't know what they're after, they nevertheless want to browse quickly and access information they come across in a logical manner. This book is a must-have for anyone who thinks seriously about the web.{\textless}/P{\textgreater}},
	publisher = {Peachpit Press},
	author = {Nielsen, Jakob},
	year = {1999},
	note = {Published: Paperback}
}

@book{chisholm_how_2003,
	edition = {1},
	title = {How to {Build} a {Business} {Rules} {Engine}: {Extending} {Application} {Functionality} through {Metadata} {Engineering} ({The} {Morgan} {Kaufmann} {Series} in {Data} {Management} {Systems})},
	isbn = {1-55860-918-0},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1558609180},
	abstract = {Ãº This is the only book that demonstrates how to develop a business rules engine. Covers user requirements, data modeling, metadata, and more. Ãº A sample application is used throughout the book to illustrate concepts. Ãº Includes conceptual overview chapters suitable for management-level readers, including general introduction, business justification, development and implementation considerations, and more. Ãº This is the only book that demonstrates how to develop a business rules engine. Covers user requirements, data modeling, metadata, and more. Ãº A sample application is used throughout the book to illustrate concepts. Ãº Includes conceptual overview chapters suitable for management-level readers, including general introduction, business justification, development and implementation considerations, and more.},
	publisher = {Morgan Kaufmann},
	author = {Chisholm, Malcolm},
	month = nov,
	year = {2003},
	note = {Published: Paperback}
}

@book{morozov_net_2011,
	title = {The {Net} {Delusion}: {The} {Dark} {Side} of {Internet} {Freedom}},
	isbn = {1-58648-874-0},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1586488740},
	publisher = {PublicAffairs},
	author = {Morozov, Evgeny},
	year = {2011},
	note = {Published: Hardcover}
}

@book{sommerville_software_2000,
	edition = {6},
	title = {Software {Engineering} (6th {Edition})},
	isbn = {0-201-39815-X},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/020139815X},
	abstract = {The new edition of this best-selling book provides a comprehensive discussion of software engineering techniques and shows how they can be applied in practical software projects. This book features new coverage of the software process and software process technology, system integration, requirements management, and risk analysis, as well as new chapters on pattern-based reuse, distributed system engineering, and legacy systems. Sommerville has incorporated a more object-oriented approach in this edition\&\#151;using UML and Java\&\#151;and has removed much of the material on CASE, formal methods, and Ada, making the book more in tune with current technology and practice. A new discussion of professional ethics in the introduction helps to make readers aware of the responsibilities that come with engineering software. The sixth edition uses Java for all programming examples, and bases all design examples on UML notation. It includes new chapters on pattern-based reuse, distributed system engineering, and legacy systems, as well as new coverage of the software process and software process technology, system integration, requirements management, and risk analysis. This book is designed for readers needing a general introduction to software engineering (development, management, and evolution), especially with regard to system requirements engineering and critical systems.},
	publisher = {Addison Wesley},
	author = {Sommerville, Ian},
	year = {2000},
	note = {Published: Hardcover}
}

@inproceedings{ding_data-gov_2010,
	title = {Data-gov {Wiki}: {Towards} {Linking} {Government} {Data}},
	booktitle = {{AAAI} {Spring} {Symposium} on {Linked} {Data} {Meets} {Artificial} {Intelligence}},
	author = {Ding, Li and DiFranzo, Dominic and Graves, Alvaro and Michaelis, James and Li, Xian and McGuinness, Deborah L. and Hendler, Jim},
	year = {2010}
}

@book{garson_public_2006,
	edition = {1},
	title = {Public {Information} {Technology} and {E}-{Governance}: {Managing} the {Virtual} {State}},
	isbn = {0-7637-3468-3},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0763734683},
	publisher = {Jones \& Bartlett Learning},
	author = {Garson, G. David},
	year = {2006},
	note = {Published: Paperback}
}

@inproceedings{scaffidi_estimating_2005,
	address = {Dallas, TX, USA},
	title = {Estimating the {Numbers} of {End} {Users} and {End} {User} {Programmers}},
	volume = {0},
	isbn = {0-7695-2443-5},
	url = {http://dx.doi.org/10.1109/vlhcc.2005.34},
	doi = {10.1109/vlhcc.2005.34},
	abstract = {In 1995, Boehm predicted that by 2005, there would be "55 million performers" of "end user programming" in the United States. The original context and method which generated this number had two weaknesses, both of which we address. First, it relies on undocumented, judgment based factors to estimate the number of end user programmers based on the total number of end users; we address this weakness by identifying specific end user sub populations and then estimating their sizes. Second, Boehm's estimate relies on additional undocumented, judgment based factors to adjust for rising computer usage rates; we address this weakness by integrating fresh Bureau of Labor Statistics (BLS) data and projections as well as a richer estimation method. With these improvements to Boehm?s method, we estimate that in 2012 there will be 90 million end users in American workplaces. Of these, we anticipate that over 55 million will use spreadsheets or databases (and therefore may potentially program), while over 13 million will describe themselves as programmers, compared to BLS projections of fewer than 3 million professional programmers. We have validated our improved method by generating estimates for 2001 and 2003, then verifying that our estimates are consistent with existing estimates from other sources.},
	booktitle = {2005 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC}'05)},
	publisher = {IEEE},
	author = {Scaffidi, C. and Shaw, M. and Myers, B.},
	year = {2005},
	pages = {207--214}
}

@incollection{lieberman_end-user_2006,
	address = {Dordrecht},
	series = {Human-{Computer} {Interaction} {Series}},
	title = {End-{User} {Development}: {An} {Emerging} {Paradigm}},
	volume = {9},
	isbn = {978-1-4020-4220-1},
	url = {http://dx.doi.org/10.1007/1-4020-5386-x_1},
	abstract = {We think that over the next few years, the goal of interactive systems and services will evolve from just making systems easy to use (even though that goal has not yet been completely achieved) to making systems that are easy to develop by end users. By now, most people have become familiar with the basic functionality and interfaces of computers, but they are not able to manage any programming language. Therefore, they cannot develop new applications or modify current ones according to their needs. In order to address such challenges it is necessary a new paradigm, based on a multidisciplinary approach involving several types of expertise, such as software engineering, human-computer interaction, CSCW, which are now rather fragmented and with little interaction. The resulting methods and tools can provide results useful across many application domains, such as ERP, multi-device services (accessible through both mobile and stationary devices), and professional applications. Key words. tailorability, end user programming, flexibility, usability},
	booktitle = {End {User} {Development}},
	publisher = {Springer Netherlands},
	author = {Lieberman, Henry and Paternò, Fabio and Klann, Markus and Wulf, Volker},
	editor = {Lieberman, Henry and Paternò, Fabio and Wulf, Volker},
	year = {2006},
	pages = {1--8}
}

@inproceedings{moya_autoriconsultas_2006,
	address = {Puertollano, La Mancha},
	title = {Autoría de {Consultas} para la {Web} {Semántica} {Orientada} al {Usuario} {Final}},
	booktitle = {{VII} {Congreso} de {Interacción} {Persona} {Ordenador}},
	author = {Moya, D. and Macías, J. A.},
	month = nov,
	year = {2006},
	pages = {217--226}
}

@article{daniel_hosted_2009,
	title = {Hosted {Universal} {Composition}: {Models}, {Languages} and {Infrastructure} in {mashArt}},
	journal = {Conceptual Modeling-ER 2009},
	author = {Daniel, F. and Casati, F. and Benatallah, B. and Shan, M. C.},
	year = {2009},
	keywords = {*file-import-10-08-27},
	pages = {428--443}
}

@article{yu_understanding_2008-1,
	title = {Understanding mashup development},
	journal = {IEEE Internet Computing},
	author = {Yu, J. and Benatallah, B. and Casati, F. and Daniel, F.},
	year = {2008},
	keywords = {*file-import-10-08-27},
	pages = {44--52}
}

@inproceedings{zang_mashups:_2008-1,
	title = {Mashups: who? what? why?},
	booktitle = {{CHI}'08 extended abstracts on {Human} factors in computing systems},
	author = {Zang, N. and Rosson, M. B. and Nasser, V.},
	year = {2008},
	keywords = {*file-import-10-08-27},
	pages = {3171--3176}
}

@techreport{kitchenham_guidelines_2007,
	title = {Guidelines for performing {Systematic} {Literature} {Reviews} in {Software} {Engineering}},
	url = {http://www.dur.ac.uk/ebse/resources/Systematic-reviews-5-8.pdf},
	abstract = {The objective of this report is to propose comprehensive guidelines for systematic literature reviews appropriate for software engineering researchers, including PhD students. A systematic literature review is a means of evaluating and interpreting all available research relevant to a particular research question, topic area, or phenomenon of interest. Systematic reviews aim to present a fair evaluation of a research topic by using a trustworthy, rigorous, and auditable methodology. The guidelines presented in this report were derived from three existing guidelines used by medical researchers, two books produced by researchers with social science backgrounds and discussions with researchers from other disciplines who are involved in evidence-based practice. The guidelines have been adapted to reflect the specific problems of software engineering research. The guidelines cover three phases of a systematic literature review: planning the review, conducting the review and reporting the review. They provide a relatively high level description. They do not consider the impact of the research questions on the review procedures, nor do they specify in detail the mechanisms needed to perform meta-analysis.},
	number = {EBSE 2007-001},
	institution = {Keele University and Durham University Joint Report},
	author = {Kitchenham, Barbara and Charters, Stuart},
	year = {2007}
}

@article{chimera_exploratory_1994,
	title = {An exploratory evaluation of three interfaces for browsing large hierarchical tables of contents},
	volume = {12},
	issn = {1046-8188},
	url = {http://dx.doi.org/10.1145/185462.185483},
	doi = {10.1145/185462.185483},
	abstract = {Three different interfaces were used to browse a large (1296 items) table of contents. A fully expanded stable interface, expand/contract interface, and multipane interface were studied in a between-groups experiment with 41 novice participants. Nine timed fact retrieval tasks were performed; each task is analyzed and discussed separately. We found that both the expand/contract and multipane interfaces produced significantly faster times than the stable interface for many tasks using this large hierarchy; other advantages of the expand/contract and multipane interfaces over the stable interface are discussed. The animation characteristics of the expand/contract interface appear to play a major role. Refinements to the multipane and expand/contract interfaces are suggested. A predictive model for measuring navigation effort of each interface is presented.},
	number = {4},
	journal = {ACM Trans. Inf. Syst.},
	author = {Chimera, Richard and Shneiderman, Ben},
	year = {1994},
	keywords = {hci},
	pages = {383--406}
}

@techreport{busch_rich_2009,
	title = {Rich {Internet} {Applications} {State}-of-the-{Art}},
	abstract = {A new kind of web applications came up to overcome the limitations of traditional web applications regarding the usability and interactivity of their user interfaces: the so-called Rich Internet Applications (RIAs). New languages and frameworks mainly drive the development of RIAs, but engineering of RIAs is a very new field in the area of software engineering in which a precise definition of RIAs and specification of their characteristics is still missing. This report presents a discussion on RIAs definitions, characteristics and the state-of-the-art regarding engineering approaches for RIAs and technologies used in their implementation. Based on existing definitions of RIAs this report came up with a new definition that addresses both, the technical characteristics of RIAs, and the user experience. Rich Internet Applications (RIAs) are web applications, which use data that can be processed both by the server and the client. Furthermore, the data exchange takes place in an asynchronous way so that the client stays responsive while continuously recalculating or updating parts of the user interface. On the client, RIAs provide a similar look-and-feel as desktop applications and the word "rich" means particularly the difference to the earlier generation of web applications. RIAs are basically characterized by a variety of interactive operating controls, the possibility of on-/offline use of the application, and the transparent usage of the client and server computing power and of the network connection.},
	institution = {Ludwig-Maximilians-Universität München, Germany},
	author = {Busch, Marianne and Koch, Nora},
	year = {2009}
}

@book{van_roy_concepts_2004,
	title = {Concepts, {Techniques}, and {Models} of {Computer} {Programming}},
	isbn = {0-262-22069-5},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262220695},
	publisher = {The MIT Press},
	author = {Van Roy, Peter and Haridi, Seif},
	month = mar,
	year = {2004},
	note = {Published: Hardcover},
	keywords = {programming}
}

@book{abelson_structure_1996,
	edition = {Second},
	series = {{MIT} {Electrical} {Engineering} and {Computer} {Science}},
	title = {Structure and {Interpretation} of {Computer} {Programs}},
	isbn = {0-262-01153-0},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262011530},
	abstract = {Abelson and Sussman's classic {\textless}I{\textgreater}Structure and Interpretation of Computer Programs{\textless}/I{\textgreater} teaches readers how to program by employing the tools of abstraction and modularity. The authors' central philosophy is that programming is the task of breaking large problems into small ones. The book spends a great deal of time considering both this decomposition and the process of knitting the smaller pieces back together.{\textless}P{\textgreater} The authors employ this philosophy in their writing technique. The text asks the broad question "What is programming?" Having come to the conclusion that programming consists of procedures and data, the authors set off to explore the related questions of "What is data?" and "What is a procedure?"{\textless}P{\textgreater} The authors build up the simple notion of a procedure to dizzying complexity. The discussion culminates in the description of the code behind the programming language Scheme. The authors finish with examples of how to implement some of the book's concepts on a register machine. Through this journey, the reader not only learns how to program, but also how to think about programming. \textit{Structure and Interpretation of Computer Programs} has had a dramatic impact on computer science curricula over the past decade. This long-awaited revision contains changes throughout the text. There are new implementations of most of the major programming systems in the book, including the interpreters and compilers, and the authors have incorporated many small changes that reflect their experience teaching the course at MIT since the first edition was published. A new theme has been introduced that emphasizes the central role played by different approaches to dealing with time in computational models: objects with state, concurrent programming, functional programming and lazy evaluation, and nondeterministic programming. There are new example sections on higher-order procedures in graphics and on applications of stream processing in numerical programming, and many new exercises. In addition, all the programs have been reworked to run in any Scheme implementation that adheres to the IEEE standard. Visit the SICP2 web site!},
	publisher = {The MIT Press},
	author = {Abelson, Harold and Sussman, Gerald J.},
	month = jul,
	year = {1996},
	note = {Published: Hardcover}
}

@inproceedings{cao_end-user_2010,
	address = {Atlanta, Georgia, USA},
	title = {End-user mashup programming: through the design lens},
	isbn = {978-1-60558-929-9},
	url = {http://dx.doi.org/10.1145/1753326.1753477},
	doi = {10.1145/1753326.1753477},
	abstract = {Programming has recently become more common among ordinary end users of computer systems. We believe that these end-user programmers are not just coders but also designers, in that they interlace making design decisions with coding rather than treating them as two separate phases. To better understand and provide support for the programming and design needs of end users, we propose a design theory-based approach to look at end-user programming. Toward this end, we conducted a think-aloud study with ten end users creating a web mashup. By analyzing users' verbal and behavioral data using Sch\&\#246;n's reflection-in-action design model and the notion of ideations from creativity literature, we discovered insights into end-user programmers' problem-solving attempts, successes, and obstacles, with accompanying implications for the design of end-user programming environments for mashups. The contribution of our work is three-fold: 1) the methodology of using a design lens to view programming, 2) evidence, through insights gained, of the usefulness of this approach, and 3) the implications themselves.},
	booktitle = {{CHI} '10: {Proceedings} of the 28th international conference on {Human} factors in computing systems},
	publisher = {ACM},
	author = {Cao, Jill and Riche, Yann and Wiedenbeck, Susan and Burnett, Margaret and Grigoreanu, Valentina},
	year = {2010},
	pages = {1009--1018}
}

@article{burnett_scaling_1995,
	title = {Scaling {Up} {Visual} {Programming} {Languages}},
	volume = {28},
	issn = {0018-9162},
	url = {http://dx.doi.org/10.1109/2.366157},
	doi = {10.1109/2.366157},
	abstract = {Visual programming languages (VPLs) appear to have great promise towards lessening the distinction between programming and problem solving, by making programming more direct, more immediate, and simpler. However, making VPLs suitable for solving large, realistic programming problems often seems to require reintroducing the very complexities that VPLs seek to avoid. This is called the scaling-up problem. This paper discusses the opportunities and obstacles VPLs encounter when attempting to solve the scaling-up problem. An understanding of this problem, its components, and the interrelationships among these components is necessary to ensure that efforts to solve the problem are productive and that these efforts do not compromise the qualities that make VPLs attractive.},
	number = {3},
	journal = {Computer},
	author = {Burnett, Margaret M. and Baker, Marla J. and Bohus, Carisa and Carlson, Paul and Yang, Sherry and van Zee, Pieter},
	month = mar,
	year = {1995},
	pages = {45--54}
}

@article{blackwell_cognitive_2001,
	title = {Cognitive {Factors} in {Programming} with {Diagrams}},
	volume = {15},
	issn = {0269-2821},
	url = {http://dx.doi.org/10.1023/A:1006689708296},
	doi = {10.1023/A:1006689708296},
	abstract = {Visual programming languages aim to broaden the use of

diagrams within the software industry, to the extent

that they are integrated into the programming language

itself. As a result, they provide an ideal opportunity

to study the benefits of diagrams as an external

representation during problem solving: not only is

programming a challenging problem-solving activity,

but the effect of diagram usage can be directly

assessed by comparing performance while using a visual

programming language to performance with a standard

textual language. There have been several

misconceptions amongst visual language researchers

regarding the role of diagrams in software design, but

these are being addressed by empirical studies and by

new theories of notation design derived from studies

of visual programming. Based on this research, the

authors are able to recommend several new directions

for research into thinking with diagrams.},
	number = {1-2},
	urldate = {2013-06-09},
	journal = {Artif. Intell. Rev.},
	author = {Blackwell, Alan F. and Whitley, Kirsten N. and Good, Judith and Petre, Marian},
	month = mar,
	year = {2001},
	keywords = {diagrammatic reasoning, diagrams, in\_res\_library, psychology of programming, visual programming},
	pages = {95--114}
}

@book{lieberman_end_2006,
	series = {Human-{Computer} {Interaction}},
	title = {End {User} {Development}},
	isbn = {1-4020-5309-6},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1402053096},
	abstract = {By now, most people have become familiar with the basic functionality and interfaces of computers. However, developing new or modified applications that effectively support users' goals still requires considerable expertise in programming that cannot be expected from most people. Thus, one fundamental challenge for the coming years is to develop environments that allow users who do not have background in programming to develop or modify their own applications, with the ultimate aim of empowering people to flexibly employ advanced information and communication technologies. The present book is an effort to make many important aspects of the international discussion on End-User Development (EUD) available to a broader audience. It provides a unique set of contributions from various research institutes in various countries addressing relevant issues and proposing original solutions. The editors hope that this broad look at the emerging paradigm of End-User Development leads you to appreciate its diversity and potential for the future. And we look forward to having you, the reader, the "end-user" of this book, contribute what you can to the field, whether it is working on a system for EUD, or simply achieving a better understanding of how EUD might fit into your work and your life.},
	publisher = {Springer},
	author = {Lieberman, Henry and Paternò, Fabio and Wulf, Volker},
	month = oct,
	year = {2006},
	note = {Published: Paperback},
	keywords = {in\_res\_library, propuesta, sw\_natura, tesis}
}

@techreport{ieee_standard_1990,
	address = {New York, NY, USA},
	title = {Standard {Glossary} of {Software} {Engineering} {Terminology}},
	url = {http://dx.doi.org/10.1109/ieeestd.1990.101064},
	abstract = {Describes the IEEE Std 610.12-1990, IEEE standard glossary of software engineering terminology, which identifies terms currently in use in the field of software engineering. Standard definitions for those terms are established.},
	institution = {IEEE Computer Society},
	author = {IEEE and Radatz, Jane and Geraci, Anne and Katki, Freny and Lane, John and McMonegal, Louise and Meyer, Bennett and Porteous, Hugh and Springsteel, Fredrick and Wilson, Paul and Yee, Mary and Young, John and Abbott, Russell J. and Ackerman, A. Frank and Baldwin, Roger R. and Berlack, H. Ronald and Bezek, J. David and Bradley, James H. and Briggs, Kathleen L. and Carney, Homer C. and Chonoles, Susann and Daughtrey, Taz and Douglas, Frank J. and Dupras, William P. and Earls, John D. and Forcht-Tucker, Mary and Gelperin, David and Gillen, A1 and Gloss-Soler, Shirley A. and Goetz, John A. and Gustafson, David A. and Haas, Virl and Ingram, James and Lindsay, Gary S. and McBeth, Robert and McCurdy, Alicia and MuiIoz, Jose and Neidhart, Geraldine and Rasmussen, Mary and Schindler, Max and Schmid, Paul and Seagren, Leonard W. and Shields, Sonja P. and Smith, Kevin and Smith, Wayne and Thompson, Paul U. and Weigel, Andrew H. and Wong, W. Martin and Jay, Frank and Mayer, Rollin and Abbott, Russell J. and Bateman, Joan P. and Beason, Stephen R. and Boyd, Milton E. and Fischer, Kurt F. and Ives, John M. and McKissick, John J. and Neumann, Albrecht J. and Postak, John N. and Radatz, Jane W. and Stewart, Marilyn J. and Sukert, Alan N. and Woodmancy, Donald A. and Yablon, David},
	year = {1990},
	keywords = {in\_res\_library, sw\_natura},
	pages = {1+}
}

@book{wohlin_experimentation_1999,
	edition = {1st},
	series = {International {Series} in {Software} {Engineering}},
	title = {Experimentation in {Software} {Engineering}: {An} {Introduction}},
	isbn = {0-7923-8682-5},
	url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0792386825},
	abstract = {The purpose of Experimentation in Software Engineering: An Introduction is to introduce students, teachers, researchers, and practitioners to experimentation and experimental evaluation with a focus on software engineering. The objective is, in particular, to provide guidelines for performing experiments evaluating methods, techniques and tools in software engineering. The introduction is provided through a process perspective. The focus is on the steps that we go through to perform experiments and quasi-experiments. The process also includes other types of empirical studies.The motivation for the book emerged from the need for support we experienced when turning our software engineering research more experimental. Several books are available which either treat the subject in very general terms or focus on some specific part of experimentation; most focus on the statistical methods in experimentation. These are important, but there were few books elaborating on experimentation from a process perspective, none addressing experimentation in software engineering in particular.The scope of Experimentation in Software Engineering: An Introduction is primarily experiments in software engineering as a means for evaluating methods, techniques and tools. The book provides some information regarding empirical studies in general, including both case studies and surveys. The intention is to provide a brief understanding of these strategies and in particular to relate them to experimentation.Experimentation in Software Engineering: An Introduction is suitable for use as a textbook or a secondary text for graduate courses, and for researchers and practitioners interested in an empirical approach to software engineering.},
	publisher = {Springer},
	author = {Wohlin, Claes and Runeson, Per and Höst, Martin and Ohlsson, Magnus C. and Regnell, Björn and Wesslén, Anders},
	year = {1999},
	note = {Published: Hardcover}
}

@phdthesis{gimenez-aldana_utilizacion_2014,
	title = {Utilización de {Técnicas} de {Programación} {Hipertextual} para la {Realización} de {Tareas} de {Diseño} de {Alto} {Nivel} por parte de {Usuarios} {Finales}},
	school = {Universidad Católica Nuestra Señora de la Asunción},
	author = {Giménez-Aldana, Gerardo},
	collaborator = {Ortiz-Chamorro, Sebastián and Cernuzzi, Luca},
	month = jan,
	year = {2014}
}

@techreport{kuh_knowing_2014,
	title = {Knowing {What} {Students} {Know} and {Can} {Do}: {The} {Current} {State} of {Student} {Learning} {Outcomes} {Assessment} in {U}.{S}. {Colleges} and {Universities}},
	shorttitle = {The {Current} {State} of {Student} {Learning} {Outcomes} {Assessment} in {U}.{S}. {Colleges} and {Universities}},
	language = {English},
	institution = {National Institute for Learning Outcomes Assessment},
	author = {Kuh, George D. and Jankowski, Natasha and Ikenberry, Stanley O. and Kinzie, Jillian},
	month = jan,
	year = {2014},
	keywords = {Assessment, SLO}
}

@book{runeson_case_2012,
	address = {Hoboken, N.J},
	title = {Case study research in software engineering: guidelines and examples},
	isbn = {978-1-118-10435-4},
	shorttitle = {Case study research in software engineering},
	abstract = {"Based on their own experiences of in-depth case studies of software projects in international corporations, in this book the authors present detailed practical guidelines on the preparation, conduct, design and reporting of case studies of software engineering. This is the first software engineering specific book on the case study research method"--},
	publisher = {Wiley},
	editor = {Runeson, Per},
	year = {2012},
	keywords = {computer software, Computers / Software Development \& Engineering / General, development}
}

@book{dewalt_participant_2011,
	address = {Lanham, Md},
	edition = {2nd ed},
	title = {Participant observation: a guide for fieldworkers},
	isbn = {978-0-7591-1926-0 978-0-7591-1927-7 978-0-7591-1928-4},
	shorttitle = {Participant observation},
	publisher = {Rowman \& Littlefield, Md},
	author = {DeWalt, Kathleen Musante and DeWalt, Billie R.},
	year = {2011},
	note = {OCLC: ocn656213202},
	keywords = {Ethnology, Fieldwork, Participant observation, Social sciences, Sociology}
}

@book{erlandson_doing_1993,
	address = {Newbury Park, Calif},
	title = {Doing naturalistic inquiry: a guide to methods},
	isbn = {978-0-8039-4937-9 978-0-8039-4938-6},
	shorttitle = {Doing naturalistic inquiry},
	publisher = {Sage},
	editor = {Erlandson, David A.},
	year = {1993},
	keywords = {Methodology, Paradigms (Social sciences), Social sciences}
}

@book{net_app_architecture,
	address = {Redmond, Wash.},
	edition = {2nd ed},
	series = {Patterns \& practices},
	title = {{NET} application architecture guide},
	isbn = {978-0-7356-2710-9},
	publisher = {Microsoft},
	year = {2009},
	note = {OCLC: ocn320803280},
	keywords = {Application software, development, Microsoft .NET Framework, Software architecture}
}

@book{wittig_amazon_2016,
	address = {Shelter Island, NY},
	title = {Amazon {Web} {Services} in action},
	isbn = {978-1-61729-288-0},
	publisher = {Manning},
	author = {Wittig, Michael and Wittig, Andreas},
	year = {2016},
	note = {OCLC: ocn934475856},
	keywords = {Amazon.com (Firm), Amazon Web Services (Firm), Cloud computing, Web services},
	annote = {Includes index}
}

@article{gilligan_self-association_1976,
	title = {The self-association of adenosine-5'-triphosphate studied by circular dichroism at low ionic strengths},
	volume = {4},
	issn = {0301-4622},
	abstract = {The self-association of adenosine-5'-triphosphate (ATP) was studied as a function of pH, additional counterions, concentration and temperature. Circular dichroism measurements were employed as a measure of the base-stacking. The self-association of ATP is pH dependent with the protonation of the adenine ring helping stabilize the association. Highly charged counterions alter this aggregation. At pH 2.8 and 20 degrees C, a dimerization constant of 88 M-1 is obtained, while an isodesmic model leads to an equilibrium constant of 158 M-1. With increasing pH, the association constants decrease. At pH 2.8 there is a very strong temperature dependence of the CD amplitude. These results indicate the existence of additional electrostatic stabilization for the stacking of the adenine rings. At acidic pHs, models are proposed to explain this high degree of stability and a calculation of the approximate electrostatic contribution to the aggregation shows it to be of the proper magnitude.},
	language = {eng},
	number = {1},
	journal = {Biophysical Chemistry},
	author = {Gilligan, T. J. and Schwarz, G.},
	month = jan,
	year = {1976},
	pmid = {2349},
	keywords = {Adenosine Triphosphate, Binding Sites, Circular Dichroism, Hydrogen-Ion Concentration, mathematics, Models, Molecular, Molecular Conformation, Osmolar Concentration, Spectrophotometry, Ultraviolet},
	pages = {55--63}
}

@article{gupta_software_2014,
	title = {Software as a {Service}},
	volume = {1},
	issn = {2349-2163},
	abstract = {Many small and medium scale industries could not afford the expensive enterprise software either
on premise or through Application Service Providers as it incurred heavy installations cost, maintenance cost.
Mean while the development of social, economic, increasing Internet technology lead to the evolvement of Cloud
computing Technology which allowed the users to share the resources across the Internet. This development brought
about a radical change in the computing technology posing new challenges as the requirements of the users kept on c
hanging frequently and such an installed Application Service Providers on the premise of the user made it difficult to
meet these changed user requirement. Thus the vendors developed a new architectural style based upon the
constructional forms and changing the way the functionalities are delivered to the user. This shift in the way of
delivery of software created a new business market. In this the user is freed from the need of installation of the
software thus shifting the maintenance cost to the vendor. This type of business model is termed as Software as a
service which is one-to-many model based on “on use pay” (subscription) basis. SaaS not much different from
traditional ASP has some SaaS specific functions added to it like registry, billing etc. This paper reviews th is
business model comparing it with the traditional ASP application and the Service Oriented Architecture. It describe
the life cycle of SaaS by covering its maturity model and its architecture. It also highlights the advantages of SaaS
along with some of the characteristics required / desired in any SaaS application.},
	language = {English},
	number = {6},
	journal = {International Journal of Innovative Research in Advanced Engineering (IJIRAE)},
	author = {Gupta, Nitu and JN, Varshapriya},
	year = {2014}
}

@article{kumar_cloud_2012,
	title = {Cloud {Computing} – {Research} {Issues}, {Challenges}, {Architecture}, {Platforms} and {Applications}: {A} {Survey}},
	volume = {1},
	shorttitle = {Cloud {Computing} - {Concepts}, {Architecture} and {Challenges}},
	abstract = {Cloud computing is the development of parallel
computing, distributed computing, grid computing and
virtualization technologies which define the shape of a new era.
Cloud computing is an emerging model of business computing.
In this paper, we explore the concept of cloud architecture and
compares cloud computing with grid computing. We also
address the characteristics and applications of several popular
cloud computing platforms. In this paper, we aim to pinpoint
the challenges and issues of cloud computing. We identified
several challenges from the cloud computing adoption
perspective and we also highlighted the cloud interoperability
issue that deserves substantial further research and
development. However, security and privacy issues present a
strong barrier for users to adapt into cloud computing systems.
In this paper, we investigate several cloud computing system
providers about their concerns on security and privacy issues.},
	language = {English},
	number = {4},
	journal = {International Journal of Future Computer and Communication},
	author = {Kumar, Santosh and Goudar, R. H.},
	month = dec,
	year = {2012},
	pages = {356}
}

@book{india_software_engineering_conference_isec09:_2009,
	title = {{ISEC}'09: proceedings of the 2009 {India} {Software} {Engineering} {Conference} : {Pune}, {India}, {February} 23-26, 2009},
	shorttitle = {{ISEC}'09},
	url = {http://dl.acm.org/citation.cfm?id=1506216},
	language = {English},
	urldate = {2017-04-07},
	author = {{India Software Engineering Conference} and Deshpande, Kiran and {Computer Society of India} and {ACM Sigsoft} and {Computer Society of India} and {Special Interest Group on Software Engineering} and {International Business Machines Corporation} and {ACM Special Interest Group on Software Engineering} and {Association for Computing Machinery} and {ACM Digital Library}},
	year = {2009},
	note = {OCLC: 809810212}
}

@article{kang_web_2012,
	title = {Web based development {Framework} for {Customizing} {Java}-based {Business} {Logic} of {SaaS} {Application}},
	journal = {ICACT},
	author = {Kang, Jihyun},
	year = {2012}
}

@book{kuh_using_2015,
	address = {San Francisco, CA},
	edition = {First edition},
	title = {Using evidence of student learning to improve higher education},
	isbn = {978-1-118-90339-1},
	publisher = {Jossey-Bass},
	editor = {Kuh, George D.},
	year = {2015},
	keywords = {Academic achievement, Administration, Aims and objectives, Educational evaluation, Educational tests and measurements, Education, Higher, EDUCATION / Higher, Evaluation, United States, Universities and colleges},
	annote = {"American higher education needs a major reframing of student learning outcomes assessment. Dynamic changes are underway in American higher education. New providers, emerging technologies, cost concerns, student debt, and nagging doubts about quality all call out the need for institutions to show evidence of student learning. From scholars at the National Institute for Learning Outcomes Assessment (NILOA), Using Evidence of Student Learning to Improve Higher Education presents a reframed conception and approach to student learning outcomes assessment. The authors explain why it is counterproductive to view collecting and using evidence of student accomplishment as primarily a compliance activity.Today's circumstances demand a fresh and more strategic approach to the processes by which evidence about student learning is obtained and used to inform efforts to improve teaching, learning, and decision-making. Whether you're in the classroom, an administrative office, or on an assessment committee, data about what students know and are able to do are critical for guiding changes that are needed in institutional policies and practices to improve student learning and success.Use this book to: Understand how and why student learning outcomes assessment can enhance student accomplishment and increase institutional effectiveness Shift the view of assessment from being externally driven to internally motivated Learn how assessment results can help inform decision-making Use assessment data to manage change and improve student success Gauging student learning is necessary if institutions are to prepare students to meet the 21st century needs of employers and live an economically independent, civically responsible life. For assessment professionals and educational leaders, Using Evidence of Student Learning to Improve Higher Education offers both a compelling rationale and practical advice for making student learning outcomes assessment more effective and efficient"-- "Offers a fresh and strategic approach to the processes by which evidence about student learning is obtained and used to inform efforts to improve teaching, learning, and decision-making"--},
	annote = {Machine generated contents note: Preface ix Acknowledgments xvii About the Authors xix 1. From Compliance to Ownership: Why and How Colleges and Universities Assess Student Learning 1 Stanley O. Ikenberry and George D. Kuh PART ONE What Works? Finding and Using Evidence 2. Evidence of Student Learning: What Counts and What Matters for Improvement 27 Pat Hutchings, Jillian Kinzie, and George D. Kuh 3. Fostering Greater Use of Assessment Results: Principles for Effective Practice 51 Jillian Kinzie, Pat Hutchings, and Natasha A. Jankowski 4. Making Assessment Consequential: Organizing to Yield Results 73 Jillian Kinzie and Natasha A. Jankowski PART TWO Who Cares? Engaging Key Stakeholders 5. Faculty and Students: Assessment at the Intersection of Teaching and Learning 95 Timothy Reese Cain and Pat Hutchings 6. Leadership in Making Assessment Matter 117 Peter T. Ewell and Stanley O. Ikenberry 7. Accreditation as Opportunity: Serving Two Purposes with Assessment 146 Peter T. Ewell and Natasha A. Jankowski 8. The Bigger Picture: Student Learning Outcomes Assessment and External Entities 160 Jillian Kinzie, Stanley O. Ikenberry, and Peter T. Ewell PART THREE What Now? Focusing Assessment on Learning 9. Assessment and Initiative Fatigue: Keeping the Focus on Learning 183 George D. Kuh and Pat Hutchings 10. From Compliance Reporting to Effective Communication: Assessment and Transparency 201 Natasha A. Jankowski and Timothy Reese Cain 11. Making Assessment Matter 220 George D. Kuh, Stanley O. Ikenberry, Natasha A. Jankowski, Timothy Reese Cain, Peter T. Ewell, Pat Hutchings, and Jillian Kinzie References 237 Appendix A: NILOA National Advisory Panel 261 Appendix B: NILOA Staff, 2008 to 2014 263 Index 265}
}

@book{barrio_minton_evaluating_2016,
	address = {Alexandria, VA},
	title = {Evaluating student learning outcomes in counselor education},
	isbn = {978-1-55620-337-4},
	publisher = {American Counseling Association},
	author = {Barrio Minton, Casey A. and Gibson, Donna M. and Wachter Morris, Carrie A.},
	year = {2016},
	keywords = {Student counselors, Training of Evaluation}
}

@article{oakleaf_choosing_2013,
	title = {Choosing and {Using} {Assessment} {Management} {Systems}: {What} {Librarians} {Need} to {Know}},
	url = {http://www.ala.org/acrl/sites/ala.org.acrl/files/content/conferences/confsandpreconfs/2013/papers/OakleafBelangerGraham_Choosing.pdf},
	journal = {ACRL},
	author = {Oakleaf, Megan and Belanger, Jackie and Graham, Carlie},
	month = apr,
	year = {2013}
}

@book{davis_agile_2015,
	address = {Shelter Island, NY},
	title = {Agile metrics in action: how to measure and improve team performance},
	isbn = {978-1-61729-248-4},
	shorttitle = {Agile metrics in action},
	abstract = {"The iterative nature of agile development is perfect for experience-based, continuous improvement. Tracking systems, test and build tools, source control, continuous integration, and other built-in parts of a project lifecycle throw off a wealth of data you can use to improve your products, processes, and teams. The question is, how to do it? Agile Metrics in Action teaches you how. This practical book is a rich resource for an agile team that aims to use metrics to objectively measure performance. You'll learn how to gather the data that really count, along with how to effectively analyze and act upon the results. Along the way, you'll discover techniques all team members can use for better individual accountability and team performance"--Publisher's description},
	publisher = {Manning},
	author = {Davis, Christopher W. H.},
	year = {2015},
	note = {OCLC: ocn907160912},
	keywords = {Agile software development, Project management},
	annote = {Includes index},
	annote = {Measuring agile performance -- Observing a live project -- Trends and data from project-tracking systems -- Trends and data from source control -- Trends and data from CI and deployment servers -- Data from your production systems -- Working with the data you're collecting: the sum of the parts -- Measuring the technical quality of your software -- Publishing metrics -- Measuring your team against the agile principles}
}

@book{aalst_workflow_2004,
	address = {Cambridge, Mass.},
	edition = {1. MIT Press paperback ed},
	series = {Cooperative information systems},
	title = {Workflow management: models, methods and systems},
	isbn = {978-0-262-72046-5 978-0-262-01189-1},
	shorttitle = {Workflow management},
	language = {eng},
	publisher = {MIT Press},
	author = {Aalst, Wil van der and Hee, Kees van},
	year = {2004},
	note = {OCLC: 255171394},
	keywords = {Managementinformationssystem, Management information systems, Production management, Prozessmanagement, Workflow},
	annote = {Literaturverz. S. [359] - 363 Hier auch später erschienene, unveränderte Nachdrucke},
	file = {Table of Contents PDF:/Users/owner/Library/Application Support/Zotero/Profiles/hdcbvw2g.default/zotero/storage/6Z98HCPK/Aalst and Hee - 2004 - Workflow management models, methods and systems.pdf:application/pdf}
}

@book{boyle_curriculum_2016,
	address = {Los Angeles},
	title = {Curriculum development: a guide for educators},
	isbn = {978-1-4462-7330-2 978-1-4462-7329-6},
	shorttitle = {Curriculum development},
	abstract = {"Curriculum and curriculum issues are at the heart of current debates about schooling, pedagogy and learning. This book will enable practitioners, scholars and academics to understand how to re-design or to suggest changes to curriculum structure, shape and content. Grounded in theory and philosophy, the book also offers practical help in grasping this controversial area."--Page 4 of cover},
	publisher = {SAGE},
	author = {Boyle, Bill and Charles, Marie},
	year = {2016},
	note = {OCLC: ocn919483148},
	keywords = {Curriculum planning},
	annote = {Introduction -- 1. Curriculum Evolution -- 2. Developing a National Curriculum: Consultation -- 3. Curriculum Development: Case Specific -- 4. Curriculum Reviewing Criteria: Case Specific -- 5. Science Curriculum: Case Specific -- 6. Early Years Foundation Curriculum: Case Specific -- 7. Balancing Raising Standards with a Well-designed and Broad Curriculum -- 8. Integrating Subjects and Themes -- 9. Curriculum Construction -- 10. Curriculum and Assessment -- 11. Assessment and Testing -- 12. National Curriculum and Summative Testing}
}

@book{driscoll_developing_2007,
	address = {Sterling, Va},
	edition = {1st ed},
	title = {Developing outcomes-based assessment for learner-centered education: a faculty introduction},
	isbn = {978-1-57922-194-2 978-1-57922-195-9},
	shorttitle = {Developing outcomes-based assessment for learner-centered education},
	publisher = {Stylus},
	author = {Driscoll, Amy and Wood, Swarup},
	year = {2007},
	note = {OCLC: ocm71812751},
	keywords = {Competency-based education, Educational tests and measurements, United States},
	annote = {Why develop outcomes for assessment and learning? : why not? -- A culture for faculty learning about outcomes-based assessment : honoring and addressing the realities -- Outcomes : articulating our learning expectations -- Student evidence : designing assignments and assessments for diverse learners -- Criteria and standards for assessment : no longer a faculty secret -- Faculty responses to development of outcomes-based assessment protocols -- Going beyond making assessment "public and visible" -- Alignment : making explicit connections between teaching decisions and learning outcomes -- Reviewing and analyzing student evidence: constructivist faculty development -- Faculty responses to assessment of student evidence -- Moving to outcomes-based assessment and learner-centered education through the scholarship of teaching, learning, and assessment}
}

@article{de2016design,
  title={The design and implementation of learning paths in a learning management system},
  author={De Smet, Cindy and Schellens, Tammy and De Wever, Bram and Brandt-Pomares, Pascale and Valcke, Martin},
  journal={Interactive Learning Environments},
  volume={24},
  number={6},
  pages={1076--1096},
  year={2016},
  publisher={Taylor \& Francis}
}

@book{carriveau_connecting_2016,
	address = {Sterling, Virginia},
	edition = {Second edition},
	title = {Connecting the dots: developing student learning outcomes and outcomes-based assessments},
	isbn = {978-1-62036-479-6 978-1-62036-480-2},
	shorttitle = {Connecting the dots},
	publisher = {Stylus Publishing, LLC},
	author = {Carriveau, Ronald S.},
	year = {2016},
	keywords = {Academic achievement, Educational evaluation, Educational tests and measurements, Education, Higher, Evaluation}
}

@book{lalor_ensuring_2017,
	address = {Alexandria, VA},
	title = {Ensuring high-quality curriculum: how to design, revise, or adopt curriculum aligned to student success},
	isbn = {978-1-4166-2279-6},
	shorttitle = {Ensuring high-quality curriculum},
	publisher = {ASCD},
	author = {Lalor, Angela Di Michele},
	year = {2017},
	keywords = {Curriculum planning}
}

@book{shneiderman_designing_2010,
	address = {Boston},
	edition = {5th ed},
	title = {Designing the user interface: strategies for effective human-computer interaction},
	isbn = {978-0-321-53735-5},
	shorttitle = {Designing the user interface},
	publisher = {Addison-Wesley},
	author = {Shneiderman, Ben and Plaisant, Catherine},
	year = {2010},
	note = {OCLC: ocn244066651},
	keywords = {Human-computer interaction, User interfaces (Computer systems)}
}

@book{nielsen_usability_2010,
	address = {Amsterdam},
	edition = {Nachdr.},
	title = {Usability engineering},
	isbn = {978-0-12-518406-9},
	language = {eng},
	publisher = {Kaufmann},
	author = {Nielsen, Jakob},
	year = {2010},
	note = {OCLC: 760142137},
	keywords = {Dialogsystem},
	annote = {Literaturangaben},
	file = {Table of Contents PDF:/Users/owner/Library/Application Support/Zotero/Profiles/hdcbvw2g.default/zotero/storage/TAA9DGGN/Nielsen - 2010 - Usability engineering.pdf:application/pdf}
}

@book{levy_ux_2015,
	address = {Beijing ; Sebastopol},
	edition = {First edition},
	title = {{UX} strategy: how to devise innovative {Digital} products that people want},
	isbn = {978-1-4493-7286-6},
	shorttitle = {{UX} strategy},
	publisher = {O'Reilly Media},
	author = {Levy, Jaime},
	year = {2015}
}